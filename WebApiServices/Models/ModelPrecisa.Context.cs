//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApiServices.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BDInmobiliariaEntities : DbContext
    {
        public BDInmobiliariaEntities()
            : base("name=BDInmobiliariaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<WCO_InsertarComprobante_Result> WCO_InsertarComprobante(Nullable<int> idComprobante, string companiaCodigo, string numeroComprobante, string tipoComprobante, string serie, Nullable<int> idSede, Nullable<int> periodo, string sucursal, Nullable<int> idPersona, string documento, Nullable<System.DateTime> fechaEmision, Nullable<System.DateTime> fechaVencimiento, string descripcion, string observacion, string moneda, Nullable<decimal> tipoCambio, string formaPago, string banco, string cuentaBancaria, string campoReferencia, Nullable<decimal> montoAfecto, Nullable<decimal> valorImpuesto, Nullable<decimal> montoImpuestoVentas, Nullable<decimal> montoTotal, Nullable<int> idDocRelacionado, string documentoRelacionado, string tipoComprobanteRelacionado, string serieRelacionado, Nullable<int> estado, string usuarioCreacion)
        {
            var idComprobanteParameter = idComprobante.HasValue ?
                new ObjectParameter("IdComprobante", idComprobante) :
                new ObjectParameter("IdComprobante", typeof(int));
    
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var numeroComprobanteParameter = numeroComprobante != null ?
                new ObjectParameter("NumeroComprobante", numeroComprobante) :
                new ObjectParameter("NumeroComprobante", typeof(string));
    
            var tipoComprobanteParameter = tipoComprobante != null ?
                new ObjectParameter("TipoComprobante", tipoComprobante) :
                new ObjectParameter("TipoComprobante", typeof(string));
    
            var serieParameter = serie != null ?
                new ObjectParameter("Serie", serie) :
                new ObjectParameter("Serie", typeof(string));
    
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(int));
    
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(string));
    
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("IdPersona", idPersona) :
                new ObjectParameter("IdPersona", typeof(int));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var fechaEmisionParameter = fechaEmision.HasValue ?
                new ObjectParameter("FechaEmision", fechaEmision) :
                new ObjectParameter("FechaEmision", typeof(System.DateTime));
    
            var fechaVencimientoParameter = fechaVencimiento.HasValue ?
                new ObjectParameter("FechaVencimiento", fechaVencimiento) :
                new ObjectParameter("FechaVencimiento", typeof(System.DateTime));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var monedaParameter = moneda != null ?
                new ObjectParameter("Moneda", moneda) :
                new ObjectParameter("Moneda", typeof(string));
    
            var tipoCambioParameter = tipoCambio.HasValue ?
                new ObjectParameter("TipoCambio", tipoCambio) :
                new ObjectParameter("TipoCambio", typeof(decimal));
    
            var formaPagoParameter = formaPago != null ?
                new ObjectParameter("FormaPago", formaPago) :
                new ObjectParameter("FormaPago", typeof(string));
    
            var bancoParameter = banco != null ?
                new ObjectParameter("Banco", banco) :
                new ObjectParameter("Banco", typeof(string));
    
            var cuentaBancariaParameter = cuentaBancaria != null ?
                new ObjectParameter("CuentaBancaria", cuentaBancaria) :
                new ObjectParameter("CuentaBancaria", typeof(string));
    
            var campoReferenciaParameter = campoReferencia != null ?
                new ObjectParameter("CampoReferencia", campoReferencia) :
                new ObjectParameter("CampoReferencia", typeof(string));
    
            var montoAfectoParameter = montoAfecto.HasValue ?
                new ObjectParameter("MontoAfecto", montoAfecto) :
                new ObjectParameter("MontoAfecto", typeof(decimal));
    
            var valorImpuestoParameter = valorImpuesto.HasValue ?
                new ObjectParameter("ValorImpuesto", valorImpuesto) :
                new ObjectParameter("ValorImpuesto", typeof(decimal));
    
            var montoImpuestoVentasParameter = montoImpuestoVentas.HasValue ?
                new ObjectParameter("MontoImpuestoVentas", montoImpuestoVentas) :
                new ObjectParameter("MontoImpuestoVentas", typeof(decimal));
    
            var montoTotalParameter = montoTotal.HasValue ?
                new ObjectParameter("MontoTotal", montoTotal) :
                new ObjectParameter("MontoTotal", typeof(decimal));
    
            var idDocRelacionadoParameter = idDocRelacionado.HasValue ?
                new ObjectParameter("IdDocRelacionado", idDocRelacionado) :
                new ObjectParameter("IdDocRelacionado", typeof(int));
    
            var documentoRelacionadoParameter = documentoRelacionado != null ?
                new ObjectParameter("DocumentoRelacionado", documentoRelacionado) :
                new ObjectParameter("DocumentoRelacionado", typeof(string));
    
            var tipoComprobanteRelacionadoParameter = tipoComprobanteRelacionado != null ?
                new ObjectParameter("TipoComprobanteRelacionado", tipoComprobanteRelacionado) :
                new ObjectParameter("TipoComprobanteRelacionado", typeof(string));
    
            var serieRelacionadoParameter = serieRelacionado != null ?
                new ObjectParameter("SerieRelacionado", serieRelacionado) :
                new ObjectParameter("SerieRelacionado", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_InsertarComprobante_Result>("WCO_InsertarComprobante", idComprobanteParameter, companiaCodigoParameter, numeroComprobanteParameter, tipoComprobanteParameter, serieParameter, idSedeParameter, periodoParameter, sucursalParameter, idPersonaParameter, documentoParameter, fechaEmisionParameter, fechaVencimientoParameter, descripcionParameter, observacionParameter, monedaParameter, tipoCambioParameter, formaPagoParameter, bancoParameter, cuentaBancariaParameter, campoReferenciaParameter, montoAfectoParameter, valorImpuestoParameter, montoImpuestoVentasParameter, montoTotalParameter, idDocRelacionadoParameter, documentoRelacionadoParameter, tipoComprobanteRelacionadoParameter, serieRelacionadoParameter, estadoParameter, usuarioCreacionParameter);
        }
    
        public virtual ObjectResult<WCO_InsertarComprobanteDetalle_Result> WCO_InsertarComprobanteDetalle(string companiaCodigo, Nullable<int> idComprobante, Nullable<int> idLinea, string clasificadorMovimiento, string moneda, string periodo, Nullable<decimal> tipoCambio, Nullable<decimal> montoImpuestoVentas, Nullable<decimal> montoAfecto, Nullable<decimal> montoTotal, string nombre, Nullable<decimal> cantidad, Nullable<int> estado, string usuarioCreacion, string codigoComponente, string sucursal, Nullable<int> indicadorImpuesto, Nullable<int> idPedido, Nullable<int> lineaPedido)
        {
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var idComprobanteParameter = idComprobante.HasValue ?
                new ObjectParameter("IdComprobante", idComprobante) :
                new ObjectParameter("IdComprobante", typeof(int));
    
            var idLineaParameter = idLinea.HasValue ?
                new ObjectParameter("IdLinea", idLinea) :
                new ObjectParameter("IdLinea", typeof(int));
    
            var clasificadorMovimientoParameter = clasificadorMovimiento != null ?
                new ObjectParameter("ClasificadorMovimiento", clasificadorMovimiento) :
                new ObjectParameter("ClasificadorMovimiento", typeof(string));
    
            var monedaParameter = moneda != null ?
                new ObjectParameter("Moneda", moneda) :
                new ObjectParameter("Moneda", typeof(string));
    
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            var tipoCambioParameter = tipoCambio.HasValue ?
                new ObjectParameter("TipoCambio", tipoCambio) :
                new ObjectParameter("TipoCambio", typeof(decimal));
    
            var montoImpuestoVentasParameter = montoImpuestoVentas.HasValue ?
                new ObjectParameter("MontoImpuestoVentas", montoImpuestoVentas) :
                new ObjectParameter("MontoImpuestoVentas", typeof(decimal));
    
            var montoAfectoParameter = montoAfecto.HasValue ?
                new ObjectParameter("MontoAfecto", montoAfecto) :
                new ObjectParameter("MontoAfecto", typeof(decimal));
    
            var montoTotalParameter = montoTotal.HasValue ?
                new ObjectParameter("MontoTotal", montoTotal) :
                new ObjectParameter("MontoTotal", typeof(decimal));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(decimal));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));
    
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(string));
    
            var indicadorImpuestoParameter = indicadorImpuesto.HasValue ?
                new ObjectParameter("IndicadorImpuesto", indicadorImpuesto) :
                new ObjectParameter("IndicadorImpuesto", typeof(int));
    
            var idPedidoParameter = idPedido.HasValue ?
                new ObjectParameter("IdPedido", idPedido) :
                new ObjectParameter("IdPedido", typeof(int));
    
            var lineaPedidoParameter = lineaPedido.HasValue ?
                new ObjectParameter("LineaPedido", lineaPedido) :
                new ObjectParameter("LineaPedido", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_InsertarComprobanteDetalle_Result>("WCO_InsertarComprobanteDetalle", companiaCodigoParameter, idComprobanteParameter, idLineaParameter, clasificadorMovimientoParameter, monedaParameter, periodoParameter, tipoCambioParameter, montoImpuestoVentasParameter, montoAfectoParameter, montoTotalParameter, nombreParameter, cantidadParameter, estadoParameter, usuarioCreacionParameter, codigoComponenteParameter, sucursalParameter, indicadorImpuestoParameter, idPedidoParameter, lineaPedidoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> WCO_InsertarContrato(ObjectParameter idContrato, Nullable<int> idProyecto, Nullable<int> idManzana, Nullable<int> idLote, Nullable<int> idCliente, Nullable<int> idVendedor, Nullable<int> idConyuge, Nullable<int> idReserva, string codigo, string descripcion, Nullable<System.DateTime> fechaContrato, Nullable<decimal> tipoContrato, Nullable<decimal> tipoInteres, string monedaCodigo, Nullable<decimal> area, Nullable<decimal> tasaInteres, Nullable<decimal> monto, Nullable<decimal> interes, Nullable<decimal> cantidadLetra, Nullable<decimal> diasGracia, Nullable<decimal> valorCuotaInicial, Nullable<decimal> valorLetra, Nullable<System.DateTime> fechaPrimeraLetra, Nullable<decimal> valorUltimaLetra, Nullable<System.DateTime> fechaInicial, Nullable<decimal> comisionPorcentaje, Nullable<decimal> comisionInicialPorcentaje, Nullable<decimal> comisionTotal, string cuentaBancaria, Nullable<decimal> tipoCambio, Nullable<int> estado, string usuarioCreacion, string ipCreacion)
        {
            var idProyectoParameter = idProyecto.HasValue ?
                new ObjectParameter("IdProyecto", idProyecto) :
                new ObjectParameter("IdProyecto", typeof(int));
    
            var idManzanaParameter = idManzana.HasValue ?
                new ObjectParameter("IdManzana", idManzana) :
                new ObjectParameter("IdManzana", typeof(int));
    
            var idLoteParameter = idLote.HasValue ?
                new ObjectParameter("IdLote", idLote) :
                new ObjectParameter("IdLote", typeof(int));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var idVendedorParameter = idVendedor.HasValue ?
                new ObjectParameter("IdVendedor", idVendedor) :
                new ObjectParameter("IdVendedor", typeof(int));
    
            var idConyugeParameter = idConyuge.HasValue ?
                new ObjectParameter("IdConyuge", idConyuge) :
                new ObjectParameter("IdConyuge", typeof(int));
    
            var idReservaParameter = idReserva.HasValue ?
                new ObjectParameter("IdReserva", idReserva) :
                new ObjectParameter("IdReserva", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var fechaContratoParameter = fechaContrato.HasValue ?
                new ObjectParameter("FechaContrato", fechaContrato) :
                new ObjectParameter("FechaContrato", typeof(System.DateTime));
    
            var tipoContratoParameter = tipoContrato.HasValue ?
                new ObjectParameter("TipoContrato", tipoContrato) :
                new ObjectParameter("TipoContrato", typeof(decimal));
    
            var tipoInteresParameter = tipoInteres.HasValue ?
                new ObjectParameter("TipoInteres", tipoInteres) :
                new ObjectParameter("TipoInteres", typeof(decimal));
    
            var monedaCodigoParameter = monedaCodigo != null ?
                new ObjectParameter("MonedaCodigo", monedaCodigo) :
                new ObjectParameter("MonedaCodigo", typeof(string));
    
            var areaParameter = area.HasValue ?
                new ObjectParameter("Area", area) :
                new ObjectParameter("Area", typeof(decimal));
    
            var tasaInteresParameter = tasaInteres.HasValue ?
                new ObjectParameter("TasaInteres", tasaInteres) :
                new ObjectParameter("TasaInteres", typeof(decimal));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("Monto", monto) :
                new ObjectParameter("Monto", typeof(decimal));
    
            var interesParameter = interes.HasValue ?
                new ObjectParameter("Interes", interes) :
                new ObjectParameter("Interes", typeof(decimal));
    
            var cantidadLetraParameter = cantidadLetra.HasValue ?
                new ObjectParameter("CantidadLetra", cantidadLetra) :
                new ObjectParameter("CantidadLetra", typeof(decimal));
    
            var diasGraciaParameter = diasGracia.HasValue ?
                new ObjectParameter("DiasGracia", diasGracia) :
                new ObjectParameter("DiasGracia", typeof(decimal));
    
            var valorCuotaInicialParameter = valorCuotaInicial.HasValue ?
                new ObjectParameter("ValorCuotaInicial", valorCuotaInicial) :
                new ObjectParameter("ValorCuotaInicial", typeof(decimal));
    
            var valorLetraParameter = valorLetra.HasValue ?
                new ObjectParameter("ValorLetra", valorLetra) :
                new ObjectParameter("ValorLetra", typeof(decimal));
    
            var fechaPrimeraLetraParameter = fechaPrimeraLetra.HasValue ?
                new ObjectParameter("FechaPrimeraLetra", fechaPrimeraLetra) :
                new ObjectParameter("FechaPrimeraLetra", typeof(System.DateTime));
    
            var valorUltimaLetraParameter = valorUltimaLetra.HasValue ?
                new ObjectParameter("ValorUltimaLetra", valorUltimaLetra) :
                new ObjectParameter("ValorUltimaLetra", typeof(decimal));
    
            var fechaInicialParameter = fechaInicial.HasValue ?
                new ObjectParameter("FechaInicial", fechaInicial) :
                new ObjectParameter("FechaInicial", typeof(System.DateTime));
    
            var comisionPorcentajeParameter = comisionPorcentaje.HasValue ?
                new ObjectParameter("ComisionPorcentaje", comisionPorcentaje) :
                new ObjectParameter("ComisionPorcentaje", typeof(decimal));
    
            var comisionInicialPorcentajeParameter = comisionInicialPorcentaje.HasValue ?
                new ObjectParameter("ComisionInicialPorcentaje", comisionInicialPorcentaje) :
                new ObjectParameter("ComisionInicialPorcentaje", typeof(decimal));
    
            var comisionTotalParameter = comisionTotal.HasValue ?
                new ObjectParameter("ComisionTotal", comisionTotal) :
                new ObjectParameter("ComisionTotal", typeof(decimal));
    
            var cuentaBancariaParameter = cuentaBancaria != null ?
                new ObjectParameter("CuentaBancaria", cuentaBancaria) :
                new ObjectParameter("CuentaBancaria", typeof(string));
    
            var tipoCambioParameter = tipoCambio.HasValue ?
                new ObjectParameter("TipoCambio", tipoCambio) :
                new ObjectParameter("TipoCambio", typeof(decimal));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var ipCreacionParameter = ipCreacion != null ?
                new ObjectParameter("IpCreacion", ipCreacion) :
                new ObjectParameter("IpCreacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("WCO_InsertarContrato", idContrato, idProyectoParameter, idManzanaParameter, idLoteParameter, idClienteParameter, idVendedorParameter, idConyugeParameter, idReservaParameter, codigoParameter, descripcionParameter, fechaContratoParameter, tipoContratoParameter, tipoInteresParameter, monedaCodigoParameter, areaParameter, tasaInteresParameter, montoParameter, interesParameter, cantidadLetraParameter, diasGraciaParameter, valorCuotaInicialParameter, valorLetraParameter, fechaPrimeraLetraParameter, valorUltimaLetraParameter, fechaInicialParameter, comisionPorcentajeParameter, comisionInicialPorcentajeParameter, comisionTotalParameter, cuentaBancariaParameter, tipoCambioParameter, estadoParameter, usuarioCreacionParameter, ipCreacionParameter);
        }
    
        public virtual ObjectResult<WCO_ListarCompaniaMast_Result> WCO_ListarCompaniaMast(string companiaCodigo, string descripcionCorta, string documentoFiscal, string estado)
        {
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var descripcionCortaParameter = descripcionCorta != null ?
                new ObjectParameter("DescripcionCorta", descripcionCorta) :
                new ObjectParameter("DescripcionCorta", typeof(string));
    
            var documentoFiscalParameter = documentoFiscal != null ?
                new ObjectParameter("DocumentoFiscal", documentoFiscal) :
                new ObjectParameter("DocumentoFiscal", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarCompaniaMast_Result>("WCO_ListarCompaniaMast", companiaCodigoParameter, descripcionCortaParameter, documentoFiscalParameter, estadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarComprobanteDetalle_Result> WCO_ListarComprobanteDetalle(Nullable<int> idComprobante, Nullable<int> idLinea, Nullable<int> estado, string codigoComponente)
        {
            var idComprobanteParameter = idComprobante.HasValue ?
                new ObjectParameter("IdComprobante", idComprobante) :
                new ObjectParameter("IdComprobante", typeof(int));
    
            var idLineaParameter = idLinea.HasValue ?
                new ObjectParameter("IdLinea", idLinea) :
                new ObjectParameter("IdLinea", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarComprobanteDetalle_Result>("WCO_ListarComprobanteDetalle", idComprobanteParameter, idLineaParameter, estadoParameter, codigoComponenteParameter);
        }
    
        public virtual ObjectResult<WCO_ListarContrato_Result> WCO_ListarContrato(Nullable<int> idContrato, Nullable<int> idReserva, Nullable<int> idLote, Nullable<int> idManzana, Nullable<int> idProyecto, Nullable<int> idCliente, Nullable<int> idVendedor, string companiaCodigo, string codigo, string descripcion, Nullable<int> idSede, string cliente, string documento, string tipoDocumento, Nullable<int> estado, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var idContratoParameter = idContrato.HasValue ?
                new ObjectParameter("IdContrato", idContrato) :
                new ObjectParameter("IdContrato", typeof(int));
    
            var idReservaParameter = idReserva.HasValue ?
                new ObjectParameter("IdReserva", idReserva) :
                new ObjectParameter("IdReserva", typeof(int));
    
            var idLoteParameter = idLote.HasValue ?
                new ObjectParameter("IdLote", idLote) :
                new ObjectParameter("IdLote", typeof(int));
    
            var idManzanaParameter = idManzana.HasValue ?
                new ObjectParameter("IdManzana", idManzana) :
                new ObjectParameter("IdManzana", typeof(int));
    
            var idProyectoParameter = idProyecto.HasValue ?
                new ObjectParameter("IdProyecto", idProyecto) :
                new ObjectParameter("IdProyecto", typeof(int));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var idVendedorParameter = idVendedor.HasValue ?
                new ObjectParameter("IdVendedor", idVendedor) :
                new ObjectParameter("IdVendedor", typeof(int));
    
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            var clienteParameter = cliente != null ?
                new ObjectParameter("Cliente", cliente) :
                new ObjectParameter("Cliente", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarContrato_Result>("WCO_ListarContrato", idContratoParameter, idReservaParameter, idLoteParameter, idManzanaParameter, idProyectoParameter, idClienteParameter, idVendedorParameter, companiaCodigoParameter, codigoParameter, descripcionParameter, idSedeParameter, clienteParameter, documentoParameter, tipoDocumentoParameter, estadoParameter, fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<WCO_ListarContratoComision_Result> WCO_ListarContratoComision(Nullable<int> secuencia, Nullable<int> idContrato, Nullable<int> idVendedor, string codigoComponente, string concepto, string vendedor, string documento, string tipoDocumento, Nullable<int> estado, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var idContratoParameter = idContrato.HasValue ?
                new ObjectParameter("IdContrato", idContrato) :
                new ObjectParameter("IdContrato", typeof(int));
    
            var idVendedorParameter = idVendedor.HasValue ?
                new ObjectParameter("IdVendedor", idVendedor) :
                new ObjectParameter("IdVendedor", typeof(int));
    
            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));
    
            var conceptoParameter = concepto != null ?
                new ObjectParameter("Concepto", concepto) :
                new ObjectParameter("Concepto", typeof(string));
    
            var vendedorParameter = vendedor != null ?
                new ObjectParameter("Vendedor", vendedor) :
                new ObjectParameter("Vendedor", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarContratoComision_Result>("WCO_ListarContratoComision", secuenciaParameter, idContratoParameter, idVendedorParameter, codigoComponenteParameter, conceptoParameter, vendedorParameter, documentoParameter, tipoDocumentoParameter, estadoParameter, fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual int WCO_ListarContratoPlanBeneficiario(Nullable<int> idPolizaPlan)
        {
            var idPolizaPlanParameter = idPolizaPlan.HasValue ?
                new ObjectParameter("IdPolizaPlan", idPolizaPlan) :
                new ObjectParameter("IdPolizaPlan", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarContratoPlanBeneficiario", idPolizaPlanParameter);
        }
    
        public virtual ObjectResult<WCO_ListarContratoRequerimiento_Result> WCO_ListarContratoRequerimiento(Nullable<int> idContrato, Nullable<int> idReserva, Nullable<int> idLote, Nullable<int> idManzana, Nullable<int> idProyecto, Nullable<int> idCliente, Nullable<int> idVendedor, string companiaCodigo, string codigo, string descripcion, Nullable<int> idSede, string cliente, string documento, string tipoDocumento, Nullable<int> estado, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var idContratoParameter = idContrato.HasValue ?
                new ObjectParameter("IdContrato", idContrato) :
                new ObjectParameter("IdContrato", typeof(int));
    
            var idReservaParameter = idReserva.HasValue ?
                new ObjectParameter("IdReserva", idReserva) :
                new ObjectParameter("IdReserva", typeof(int));
    
            var idLoteParameter = idLote.HasValue ?
                new ObjectParameter("IdLote", idLote) :
                new ObjectParameter("IdLote", typeof(int));
    
            var idManzanaParameter = idManzana.HasValue ?
                new ObjectParameter("IdManzana", idManzana) :
                new ObjectParameter("IdManzana", typeof(int));
    
            var idProyectoParameter = idProyecto.HasValue ?
                new ObjectParameter("IdProyecto", idProyecto) :
                new ObjectParameter("IdProyecto", typeof(int));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var idVendedorParameter = idVendedor.HasValue ?
                new ObjectParameter("IdVendedor", idVendedor) :
                new ObjectParameter("IdVendedor", typeof(int));
    
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            var clienteParameter = cliente != null ?
                new ObjectParameter("Cliente", cliente) :
                new ObjectParameter("Cliente", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarContratoRequerimiento_Result>("WCO_ListarContratoRequerimiento", idContratoParameter, idReservaParameter, idLoteParameter, idManzanaParameter, idProyectoParameter, idClienteParameter, idVendedorParameter, companiaCodigoParameter, codigoParameter, descripcionParameter, idSedeParameter, clienteParameter, documentoParameter, tipoDocumentoParameter, estadoParameter, fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<WCO_ListarContratoSeguimiento_Result> WCO_ListarContratoSeguimiento(Nullable<int> idContrato, Nullable<int> idReserva, Nullable<int> idLote, Nullable<int> idManzana, Nullable<int> idProyecto, Nullable<int> idCliente, Nullable<int> idVendedor, string companiaCodigo, string codigo, string descripcion, Nullable<int> idSede, string cliente, string documento, string tipoDocumento, Nullable<int> estado, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var idContratoParameter = idContrato.HasValue ?
                new ObjectParameter("IdContrato", idContrato) :
                new ObjectParameter("IdContrato", typeof(int));
    
            var idReservaParameter = idReserva.HasValue ?
                new ObjectParameter("IdReserva", idReserva) :
                new ObjectParameter("IdReserva", typeof(int));
    
            var idLoteParameter = idLote.HasValue ?
                new ObjectParameter("IdLote", idLote) :
                new ObjectParameter("IdLote", typeof(int));
    
            var idManzanaParameter = idManzana.HasValue ?
                new ObjectParameter("IdManzana", idManzana) :
                new ObjectParameter("IdManzana", typeof(int));
    
            var idProyectoParameter = idProyecto.HasValue ?
                new ObjectParameter("IdProyecto", idProyecto) :
                new ObjectParameter("IdProyecto", typeof(int));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var idVendedorParameter = idVendedor.HasValue ?
                new ObjectParameter("IdVendedor", idVendedor) :
                new ObjectParameter("IdVendedor", typeof(int));
    
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            var clienteParameter = cliente != null ?
                new ObjectParameter("Cliente", cliente) :
                new ObjectParameter("Cliente", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarContratoSeguimiento_Result>("WCO_ListarContratoSeguimiento", idContratoParameter, idReservaParameter, idLoteParameter, idManzanaParameter, idProyectoParameter, idClienteParameter, idVendedorParameter, companiaCodigoParameter, codigoParameter, descripcionParameter, idSedeParameter, clienteParameter, documentoParameter, tipoDocumentoParameter, estadoParameter, fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<WCO_ListarCorreoNegocio_Result> WCO_ListarCorreoNegocio(Nullable<int> uneuNegocioId, Nullable<int> idCorreo, string correo, Nullable<int> estado)
        {
            var uneuNegocioIdParameter = uneuNegocioId.HasValue ?
                new ObjectParameter("UneuNegocioId", uneuNegocioId) :
                new ObjectParameter("UneuNegocioId", typeof(int));
    
            var idCorreoParameter = idCorreo.HasValue ?
                new ObjectParameter("IdCorreo", idCorreo) :
                new ObjectParameter("IdCorreo", typeof(int));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarCorreoNegocio_Result>("WCO_ListarCorreoNegocio", uneuNegocioIdParameter, idCorreoParameter, correoParameter, estadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarCorreoNegocioDetalle_Result> WCO_ListarCorreoNegocioDetalle(Nullable<int> idCorreo, Nullable<int> idCorreoDet, Nullable<int> uneuNegocioId)
        {
            var idCorreoParameter = idCorreo.HasValue ?
                new ObjectParameter("IdCorreo", idCorreo) :
                new ObjectParameter("IdCorreo", typeof(int));
    
            var idCorreoDetParameter = idCorreoDet.HasValue ?
                new ObjectParameter("IdCorreoDet", idCorreoDet) :
                new ObjectParameter("IdCorreoDet", typeof(int));
    
            var uneuNegocioIdParameter = uneuNegocioId.HasValue ?
                new ObjectParameter("UneuNegocioId", uneuNegocioId) :
                new ObjectParameter("UneuNegocioId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarCorreoNegocioDetalle_Result>("WCO_ListarCorreoNegocioDetalle", idCorreoParameter, idCorreoDetParameter, uneuNegocioIdParameter);
        }
    
        public virtual ObjectResult<WCO_ListarCostCenterMst_Result> WCO_ListarCostCenterMst(string costCenter, string localName)
        {
            var costCenterParameter = costCenter != null ?
                new ObjectParameter("CostCenter", costCenter) :
                new ObjectParameter("CostCenter", typeof(string));
    
            var localNameParameter = localName != null ?
                new ObjectParameter("LocalName", localName) :
                new ObjectParameter("LocalName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarCostCenterMst_Result>("WCO_ListarCostCenterMst", costCenterParameter, localNameParameter);
        }
    
        public virtual ObjectResult<WCO_ListarCuentaBancaria_Result> WCO_ListarCuentaBancaria(string cuentaBancaria, string companiaCodigo, Nullable<int> persona, string banco, string descripcion, string estado)
        {
            var cuentaBancariaParameter = cuentaBancaria != null ?
                new ObjectParameter("CuentaBancaria", cuentaBancaria) :
                new ObjectParameter("CuentaBancaria", typeof(string));
    
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var personaParameter = persona.HasValue ?
                new ObjectParameter("Persona", persona) :
                new ObjectParameter("Persona", typeof(int));
    
            var bancoParameter = banco != null ?
                new ObjectParameter("Banco", banco) :
                new ObjectParameter("Banco", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarCuentaBancaria_Result>("WCO_ListarCuentaBancaria", cuentaBancariaParameter, companiaCodigoParameter, personaParameter, bancoParameter, descripcionParameter, estadoParameter);
        }
    
        public virtual int WCO_ListarDetalleAsociado(Nullable<int> idTablaMaestro, Nullable<int> idCodigo, Nullable<int> secuencial, string codigo, Nullable<int> estado)
        {
            var idTablaMaestroParameter = idTablaMaestro.HasValue ?
                new ObjectParameter("IdTablaMaestro", idTablaMaestro) :
                new ObjectParameter("IdTablaMaestro", typeof(int));
    
            var idCodigoParameter = idCodigo.HasValue ?
                new ObjectParameter("IdCodigo", idCodigo) :
                new ObjectParameter("IdCodigo", typeof(int));
    
            var secuencialParameter = secuencial.HasValue ?
                new ObjectParameter("Secuencial", secuencial) :
                new ObjectParameter("Secuencial", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarDetalleAsociado", idTablaMaestroParameter, idCodigoParameter, secuencialParameter, codigoParameter, estadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarEgreso_Result> WCO_ListarEgreso(Nullable<int> idEgreso, string codigo, Nullable<int> idEmpleado, string companiaCodigo, string empleado, Nullable<int> idSede, string documento, string tipoDocumento, Nullable<int> estado, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var idEgresoParameter = idEgreso.HasValue ?
                new ObjectParameter("IdEgreso", idEgreso) :
                new ObjectParameter("IdEgreso", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var empleadoParameter = empleado != null ?
                new ObjectParameter("Empleado", empleado) :
                new ObjectParameter("Empleado", typeof(string));
    
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarEgreso_Result>("WCO_ListarEgreso", idEgresoParameter, codigoParameter, idEmpleadoParameter, companiaCodigoParameter, empleadoParameter, idSedeParameter, documentoParameter, tipoDocumentoParameter, estadoParameter, fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<WCO_ListarEgresoDetalle_Result> WCO_ListarEgresoDetalle(Nullable<int> id, Nullable<int> idEgreso, Nullable<int> estado)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var idEgresoParameter = idEgreso.HasValue ?
                new ObjectParameter("IdEgreso", idEgreso) :
                new ObjectParameter("IdEgreso", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarEgresoDetalle_Result>("WCO_ListarEgresoDetalle", idParameter, idEgresoParameter, estadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarEmpleados_Result> WCO_ListarEmpleados(Nullable<int> uneuNegocioId, string companiaSocio, Nullable<int> idempleado, string tipoDocumento, string documento, string nombre, string tipoTrabajador, string cargo, string estado)
        {
            var uneuNegocioIdParameter = uneuNegocioId.HasValue ?
                new ObjectParameter("UneuNegocioId", uneuNegocioId) :
                new ObjectParameter("UneuNegocioId", typeof(int));
    
            var companiaSocioParameter = companiaSocio != null ?
                new ObjectParameter("CompaniaSocio", companiaSocio) :
                new ObjectParameter("CompaniaSocio", typeof(string));
    
            var idempleadoParameter = idempleado.HasValue ?
                new ObjectParameter("Idempleado", idempleado) :
                new ObjectParameter("Idempleado", typeof(int));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var tipoTrabajadorParameter = tipoTrabajador != null ?
                new ObjectParameter("tipoTrabajador", tipoTrabajador) :
                new ObjectParameter("tipoTrabajador", typeof(string));
    
            var cargoParameter = cargo != null ?
                new ObjectParameter("Cargo", cargo) :
                new ObjectParameter("Cargo", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarEmpleados_Result>("WCO_ListarEmpleados", uneuNegocioIdParameter, companiaSocioParameter, idempleadoParameter, tipoDocumentoParameter, documentoParameter, nombreParameter, tipoTrabajadorParameter, cargoParameter, estadoParameter);
        }
    
        public virtual int WCO_ListarEspecialidad(Nullable<int> idEspecialidad, string codigo, string descripcion, Nullable<int> estado)
        {
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarEspecialidad", idEspecialidadParameter, codigoParameter, descripcionParameter, estadoParameter);
        }
    
        public virtual int WCO_ListarEstadoAprobacion(Nullable<int> idSecuencial, Nullable<int> estadoDocumento, string idUsuario, string codigoTabla, Nullable<int> estado, Nullable<int> uneuNegocioId)
        {
            var idSecuencialParameter = idSecuencial.HasValue ?
                new ObjectParameter("IdSecuencial", idSecuencial) :
                new ObjectParameter("IdSecuencial", typeof(int));
    
            var estadoDocumentoParameter = estadoDocumento.HasValue ?
                new ObjectParameter("EstadoDocumento", estadoDocumento) :
                new ObjectParameter("EstadoDocumento", typeof(int));
    
            var idUsuarioParameter = idUsuario != null ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(string));
    
            var codigoTablaParameter = codigoTabla != null ?
                new ObjectParameter("CodigoTabla", codigoTabla) :
                new ObjectParameter("CodigoTabla", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var uneuNegocioIdParameter = uneuNegocioId.HasValue ?
                new ObjectParameter("UneuNegocioId", uneuNegocioId) :
                new ObjectParameter("UneuNegocioId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarEstadoAprobacion", idSecuencialParameter, estadoDocumentoParameter, idUsuarioParameter, codigoTablaParameter, estadoParameter, uneuNegocioIdParameter);
        }
    
        public virtual int WCO_ListarExamenInsumo(Nullable<int> id, Nullable<int> idExamen, Nullable<int> idInsumo, Nullable<int> estado)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var idExamenParameter = idExamen.HasValue ?
                new ObjectParameter("IdExamen", idExamen) :
                new ObjectParameter("IdExamen", typeof(int));
    
            var idInsumoParameter = idInsumo.HasValue ?
                new ObjectParameter("IdInsumo", idInsumo) :
                new ObjectParameter("IdInsumo", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarExamenInsumo", idParameter, idExamenParameter, idInsumoParameter, estadoParameter);
        }
    
        public virtual int WCO_ListarExamenPatologico(Nullable<int> idExamen, string descripcion, Nullable<int> estado)
        {
            var idExamenParameter = idExamen.HasValue ?
                new ObjectParameter("IdExamen", idExamen) :
                new ObjectParameter("IdExamen", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarExamenPatologico", idExamenParameter, descripcionParameter, estadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarInteresComprobante_Result> WCO_ListarInteresComprobante(Nullable<int> idComprobante, Nullable<int> idInteres, Nullable<int> idContrato)
        {
            var idComprobanteParameter = idComprobante.HasValue ?
                new ObjectParameter("IdComprobante", idComprobante) :
                new ObjectParameter("IdComprobante", typeof(int));
    
            var idInteresParameter = idInteres.HasValue ?
                new ObjectParameter("IdInteres", idInteres) :
                new ObjectParameter("IdInteres", typeof(int));
    
            var idContratoParameter = idContrato.HasValue ?
                new ObjectParameter("IdContrato", idContrato) :
                new ObjectParameter("IdContrato", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarInteresComprobante_Result>("WCO_ListarInteresComprobante", idComprobanteParameter, idInteresParameter, idContratoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarInteresPadre_Result> WCO_ListarInteresPadre(Nullable<int> idContrato, Nullable<int> idInteresPadre)
        {
            var idContratoParameter = idContrato.HasValue ?
                new ObjectParameter("IdContrato", idContrato) :
                new ObjectParameter("IdContrato", typeof(int));
    
            var idInteresPadreParameter = idInteresPadre.HasValue ?
                new ObjectParameter("IdInteresPadre", idInteresPadre) :
                new ObjectParameter("IdInteresPadre", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarInteresPadre_Result>("WCO_ListarInteresPadre", idContratoParameter, idInteresPadreParameter);
        }
    
        public virtual ObjectResult<WCO_ListarLetraComprobante_Result> WCO_ListarLetraComprobante(Nullable<int> idLetra, Nullable<int> idContrato, Nullable<int> idReserva, Nullable<int> idComprobante)
        {
            var idLetraParameter = idLetra.HasValue ?
                new ObjectParameter("IdLetra", idLetra) :
                new ObjectParameter("IdLetra", typeof(int));
    
            var idContratoParameter = idContrato.HasValue ?
                new ObjectParameter("IdContrato", idContrato) :
                new ObjectParameter("IdContrato", typeof(int));
    
            var idReservaParameter = idReserva.HasValue ?
                new ObjectParameter("IdReserva", idReserva) :
                new ObjectParameter("IdReserva", typeof(int));
    
            var idComprobanteParameter = idComprobante.HasValue ?
                new ObjectParameter("IdComprobante", idComprobante) :
                new ObjectParameter("IdComprobante", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarLetraComprobante_Result>("WCO_ListarLetraComprobante", idLetraParameter, idContratoParameter, idReservaParameter, idComprobanteParameter);
        }
    
        public virtual ObjectResult<WCO_ListarLetraImpresion_Result> WCO_ListarLetraImpresion(Nullable<int> idContrato)
        {
            var idContratoParameter = idContrato.HasValue ?
                new ObjectParameter("IdContrato", idContrato) :
                new ObjectParameter("IdContrato", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarLetraImpresion_Result>("WCO_ListarLetraImpresion", idContratoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarLetraInteres_Result> WCO_ListarLetraInteres(Nullable<int> idContrato, Nullable<int> idLetra, Nullable<int> idInteres)
        {
            var idContratoParameter = idContrato.HasValue ?
                new ObjectParameter("IdContrato", idContrato) :
                new ObjectParameter("IdContrato", typeof(int));
    
            var idLetraParameter = idLetra.HasValue ?
                new ObjectParameter("IdLetra", idLetra) :
                new ObjectParameter("IdLetra", typeof(int));
    
            var idInteresParameter = idInteres.HasValue ?
                new ObjectParameter("IdInteres", idInteres) :
                new ObjectParameter("IdInteres", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarLetraInteres_Result>("WCO_ListarLetraInteres", idContratoParameter, idLetraParameter, idInteresParameter);
        }
    
        public virtual ObjectResult<WCO_ListarLote_Result> WCO_ListarLote(Nullable<int> idLote, Nullable<int> idManzana, Nullable<int> idProyecto, string companiaCodigo, string codigo, string nombre, Nullable<int> estado, Nullable<int> idSede, string departamento, string provincia, string distrito)
        {
            var idLoteParameter = idLote.HasValue ?
                new ObjectParameter("IdLote", idLote) :
                new ObjectParameter("IdLote", typeof(int));
    
            var idManzanaParameter = idManzana.HasValue ?
                new ObjectParameter("IdManzana", idManzana) :
                new ObjectParameter("IdManzana", typeof(int));
    
            var idProyectoParameter = idProyecto.HasValue ?
                new ObjectParameter("IdProyecto", idProyecto) :
                new ObjectParameter("IdProyecto", typeof(int));
    
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            var departamentoParameter = departamento != null ?
                new ObjectParameter("Departamento", departamento) :
                new ObjectParameter("Departamento", typeof(string));
    
            var provinciaParameter = provincia != null ?
                new ObjectParameter("Provincia", provincia) :
                new ObjectParameter("Provincia", typeof(string));
    
            var distritoParameter = distrito != null ?
                new ObjectParameter("Distrito", distrito) :
                new ObjectParameter("Distrito", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarLote_Result>("WCO_ListarLote", idLoteParameter, idManzanaParameter, idProyectoParameter, companiaCodigoParameter, codigoParameter, nombreParameter, estadoParameter, idSedeParameter, departamentoParameter, provinciaParameter, distritoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarManzana_Result> WCO_ListarManzana(Nullable<int> idManzana, Nullable<int> idProyecto, string companiaCodigo, string codigo, string nombre, Nullable<int> estado, Nullable<int> idSede)
        {
            var idManzanaParameter = idManzana.HasValue ?
                new ObjectParameter("IdManzana", idManzana) :
                new ObjectParameter("IdManzana", typeof(int));
    
            var idProyectoParameter = idProyecto.HasValue ?
                new ObjectParameter("IdProyecto", idProyecto) :
                new ObjectParameter("IdProyecto", typeof(int));
    
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarManzana_Result>("WCO_ListarManzana", idManzanaParameter, idProyectoParameter, companiaCodigoParameter, codigoParameter, nombreParameter, estadoParameter, idSedeParameter);
        }
    
        public virtual int WCO_ListarMedico(string nombreCompleto, Nullable<int> estado, string tipoDocumento, string documento, string cMP, Nullable<int> medicoId, Nullable<int> idEspecialidad)
        {
            var nombreCompletoParameter = nombreCompleto != null ?
                new ObjectParameter("NombreCompleto", nombreCompleto) :
                new ObjectParameter("NombreCompleto", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var cMPParameter = cMP != null ?
                new ObjectParameter("CMP", cMP) :
                new ObjectParameter("CMP", typeof(string));
    
            var medicoIdParameter = medicoId.HasValue ?
                new ObjectParameter("MedicoId", medicoId) :
                new ObjectParameter("MedicoId", typeof(int));
    
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarMedico", nombreCompletoParameter, estadoParameter, tipoDocumentoParameter, documentoParameter, cMPParameter, medicoIdParameter, idEspecialidadParameter);
        }
    
        public virtual ObjectResult<WCO_ListarMedicos_Result> WCO_ListarMedicos(Nullable<int> p_PERSONA)
        {
            var p_PERSONAParameter = p_PERSONA.HasValue ?
                new ObjectParameter("p_PERSONA", p_PERSONA) :
                new ObjectParameter("p_PERSONA", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarMedicos_Result>("WCO_ListarMedicos", p_PERSONAParameter);
        }
    
        public virtual int WCO_ListarMensaje(Nullable<int> idMensaje, Nullable<int> idEmpresa, string codigo, string nombre, Nullable<int> tipoMensaje, Nullable<int> estado)
        {
            var idMensajeParameter = idMensaje.HasValue ?
                new ObjectParameter("IdMensaje", idMensaje) :
                new ObjectParameter("IdMensaje", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var tipoMensajeParameter = tipoMensaje.HasValue ?
                new ObjectParameter("TipoMensaje", tipoMensaje) :
                new ObjectParameter("TipoMensaje", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarMensaje", idMensajeParameter, idEmpresaParameter, codigoParameter, nombreParameter, tipoMensajeParameter, estadoParameter);
        }
    
        public virtual int WCO_ListarMensajeProgramacion(Nullable<int> idProgramacion, Nullable<int> idMensaje, Nullable<int> tipoMensaje, Nullable<int> idResponsable, Nullable<int> idEmpresa, string responsable, string documento, string tipoDocumento, string codigo, string nombre, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<int> estado)
        {
            var idProgramacionParameter = idProgramacion.HasValue ?
                new ObjectParameter("IdProgramacion", idProgramacion) :
                new ObjectParameter("IdProgramacion", typeof(int));
    
            var idMensajeParameter = idMensaje.HasValue ?
                new ObjectParameter("IdMensaje", idMensaje) :
                new ObjectParameter("IdMensaje", typeof(int));
    
            var tipoMensajeParameter = tipoMensaje.HasValue ?
                new ObjectParameter("TipoMensaje", tipoMensaje) :
                new ObjectParameter("TipoMensaje", typeof(int));
    
            var idResponsableParameter = idResponsable.HasValue ?
                new ObjectParameter("IdResponsable", idResponsable) :
                new ObjectParameter("IdResponsable", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var responsableParameter = responsable != null ?
                new ObjectParameter("Responsable", responsable) :
                new ObjectParameter("Responsable", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarMensajeProgramacion", idProgramacionParameter, idMensajeParameter, tipoMensajeParameter, idResponsableParameter, idEmpresaParameter, responsableParameter, documentoParameter, tipoDocumentoParameter, codigoParameter, nombreParameter, fechaInicioParameter, fechaFinParameter, estadoParameter);
        }
    
        public virtual int WCO_ListarMensajeProgramacionPersona(Nullable<int> idProgramacion, string codigo, Nullable<int> estado)
        {
            var idProgramacionParameter = idProgramacion.HasValue ?
                new ObjectParameter("IdProgramacion", idProgramacion) :
                new ObjectParameter("IdProgramacion", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarMensajeProgramacionPersona", idProgramacionParameter, codigoParameter, estadoParameter);
        }
    
        public virtual int WCO_ListarMenuOpciones(string aPLICACIONCODIGO)
        {
            var aPLICACIONCODIGOParameter = aPLICACIONCODIGO != null ?
                new ObjectParameter("APLICACIONCODIGO", aPLICACIONCODIGO) :
                new ObjectParameter("APLICACIONCODIGO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarMenuOpciones", aPLICACIONCODIGOParameter);
        }
    
        public virtual ObjectResult<WCO_ListarMenuOpcionesPerfil_Result> WCO_ListarMenuOpcionesPerfil(string pERFIL, string aPLICACIONCODIGO)
        {
            var pERFILParameter = pERFIL != null ?
                new ObjectParameter("PERFIL", pERFIL) :
                new ObjectParameter("PERFIL", typeof(string));
    
            var aPLICACIONCODIGOParameter = aPLICACIONCODIGO != null ?
                new ObjectParameter("APLICACIONCODIGO", aPLICACIONCODIGO) :
                new ObjectParameter("APLICACIONCODIGO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarMenuOpcionesPerfil_Result>("WCO_ListarMenuOpcionesPerfil", pERFILParameter, aPLICACIONCODIGOParameter);
        }
    
        public virtual int WCO_ListarModeloServicio(Nullable<int> uneuNegocioId, Nullable<int> modeloServicioId, string mosDescripcion, Nullable<int> mosEstado, Nullable<int> tipoOperacionId)
        {
            var uneuNegocioIdParameter = uneuNegocioId.HasValue ?
                new ObjectParameter("UneuNegocioId", uneuNegocioId) :
                new ObjectParameter("UneuNegocioId", typeof(int));
    
            var modeloServicioIdParameter = modeloServicioId.HasValue ?
                new ObjectParameter("ModeloServicioId", modeloServicioId) :
                new ObjectParameter("ModeloServicioId", typeof(int));
    
            var mosDescripcionParameter = mosDescripcion != null ?
                new ObjectParameter("MosDescripcion", mosDescripcion) :
                new ObjectParameter("MosDescripcion", typeof(string));
    
            var mosEstadoParameter = mosEstado.HasValue ?
                new ObjectParameter("MosEstado", mosEstado) :
                new ObjectParameter("MosEstado", typeof(int));
    
            var tipoOperacionIdParameter = tipoOperacionId.HasValue ?
                new ObjectParameter("TipoOperacionId", tipoOperacionId) :
                new ObjectParameter("TipoOperacionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarModeloServicio", uneuNegocioIdParameter, modeloServicioIdParameter, mosDescripcionParameter, mosEstadoParameter, tipoOperacionIdParameter);
        }
    
        public virtual int WCO_ListarModServDetalle(Nullable<int> uneuNegocioId, Nullable<int> modeloServicioId, string codigoComponente, Nullable<int> tipoOperacionID, string descripcion)
        {
            var uneuNegocioIdParameter = uneuNegocioId.HasValue ?
                new ObjectParameter("UneuNegocioId", uneuNegocioId) :
                new ObjectParameter("UneuNegocioId", typeof(int));
    
            var modeloServicioIdParameter = modeloServicioId.HasValue ?
                new ObjectParameter("ModeloServicioId", modeloServicioId) :
                new ObjectParameter("ModeloServicioId", typeof(int));
    
            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));
    
            var tipoOperacionIDParameter = tipoOperacionID.HasValue ?
                new ObjectParameter("TipoOperacionID", tipoOperacionID) :
                new ObjectParameter("TipoOperacionID", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarModServDetalle", uneuNegocioIdParameter, modeloServicioIdParameter, codigoComponenteParameter, tipoOperacionIDParameter, descripcionParameter);
        }
    
        public virtual ObjectResult<WCO_ListarMonedaMast_Result> WCO_ListarMonedaMast(string estado)
        {
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarMonedaMast_Result>("WCO_ListarMonedaMast", estadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarParametro_Result> WCO_ListarParametro(string companiaCodigo, string aplicacionCodigo, string parametroClave, string descripcionParametro, string tipodeDatoFlag, string estado)
        {
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var aplicacionCodigoParameter = aplicacionCodigo != null ?
                new ObjectParameter("AplicacionCodigo", aplicacionCodigo) :
                new ObjectParameter("AplicacionCodigo", typeof(string));
    
            var parametroClaveParameter = parametroClave != null ?
                new ObjectParameter("ParametroClave", parametroClave) :
                new ObjectParameter("ParametroClave", typeof(string));
    
            var descripcionParametroParameter = descripcionParametro != null ?
                new ObjectParameter("DescripcionParametro", descripcionParametro) :
                new ObjectParameter("DescripcionParametro", typeof(string));
    
            var tipodeDatoFlagParameter = tipodeDatoFlag != null ?
                new ObjectParameter("TipodeDatoFlag", tipodeDatoFlag) :
                new ObjectParameter("TipodeDatoFlag", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarParametro_Result>("WCO_ListarParametro", companiaCodigoParameter, aplicacionCodigoParameter, parametroClaveParameter, descripcionParametroParameter, tipodeDatoFlagParameter, estadoParameter);
        }
    
        public virtual ObjectResult<WCO_LISTARPERFILPAG_Result> WCO_LISTARPERFILPAG(string estado, string perfil)
        {
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            var perfilParameter = perfil != null ?
                new ObjectParameter("perfil", perfil) :
                new ObjectParameter("perfil", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_LISTARPERFILPAG_Result>("WCO_LISTARPERFILPAG", estadoParameter, perfilParameter);
        }
    
        public virtual int WCO_ListarPeriodoEmision(Nullable<int> uneuNegocioId)
        {
            var uneuNegocioIdParameter = uneuNegocioId.HasValue ?
                new ObjectParameter("UneuNegocioId", uneuNegocioId) :
                new ObjectParameter("UneuNegocioId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarPeriodoEmision", uneuNegocioIdParameter);
        }
    
        public virtual ObjectResult<WCO_ListarPersonas_Result> WCO_ListarPersonas(string nombre, string tipoperso, string estado)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var tipopersoParameter = tipoperso != null ?
                new ObjectParameter("tipoperso", tipoperso) :
                new ObjectParameter("tipoperso", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarPersonas_Result>("WCO_ListarPersonas", nombreParameter, tipopersoParameter, estadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarPersonasGeneral_Result> WCO_ListarPersonasGeneral(string nOMBRECOMPLETO, string tipoDocumento, string documento, string tipoPersona, string estado, string esEmpleado)
        {
            var nOMBRECOMPLETOParameter = nOMBRECOMPLETO != null ?
                new ObjectParameter("NOMBRECOMPLETO", nOMBRECOMPLETO) :
                new ObjectParameter("NOMBRECOMPLETO", typeof(string));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var tipoPersonaParameter = tipoPersona != null ?
                new ObjectParameter("TipoPersona", tipoPersona) :
                new ObjectParameter("TipoPersona", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var esEmpleadoParameter = esEmpleado != null ?
                new ObjectParameter("EsEmpleado", esEmpleado) :
                new ObjectParameter("EsEmpleado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarPersonasGeneral_Result>("WCO_ListarPersonasGeneral", nOMBRECOMPLETOParameter, tipoDocumentoParameter, documentoParameter, tipoPersonaParameter, estadoParameter, esEmpleadoParameter);
        }
    
        public virtual ObjectResult<WCO_LISTARPERSONAUSUMASIVO_Result> WCO_LISTARPERSONAUSUMASIVO(Nullable<int> pERSONA)
        {
            var pERSONAParameter = pERSONA.HasValue ?
                new ObjectParameter("PERSONA", pERSONA) :
                new ObjectParameter("PERSONA", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_LISTARPERSONAUSUMASIVO_Result>("WCO_LISTARPERSONAUSUMASIVO", pERSONAParameter);
        }
    
        public virtual ObjectResult<WCO_ListarProyecto_Result> WCO_ListarProyecto(Nullable<int> idProyecto, string companiaCodigo, string codigo, string nombre, Nullable<int> estado, Nullable<int> idSede, string departamento, string provincia, string distrito, Nullable<System.DateTime> fechaFin, Nullable<System.DateTime> fechaIni)
        {
            var idProyectoParameter = idProyecto.HasValue ?
                new ObjectParameter("IdProyecto", idProyecto) :
                new ObjectParameter("IdProyecto", typeof(int));
    
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            var departamentoParameter = departamento != null ?
                new ObjectParameter("Departamento", departamento) :
                new ObjectParameter("Departamento", typeof(string));
    
            var provinciaParameter = provincia != null ?
                new ObjectParameter("Provincia", provincia) :
                new ObjectParameter("Provincia", typeof(string));
    
            var distritoParameter = distrito != null ?
                new ObjectParameter("Distrito", distrito) :
                new ObjectParameter("Distrito", typeof(string));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var fechaIniParameter = fechaIni.HasValue ?
                new ObjectParameter("FechaIni", fechaIni) :
                new ObjectParameter("FechaIni", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarProyecto_Result>("WCO_ListarProyecto", idProyectoParameter, companiaCodigoParameter, codigoParameter, nombreParameter, estadoParameter, idSedeParameter, departamentoParameter, provinciaParameter, distritoParameter, fechaFinParameter, fechaIniParameter);
        }
    
        public virtual ObjectResult<WCO_ListarReserva_Result> WCO_ListarReserva(Nullable<int> idReserva, Nullable<int> idLote, Nullable<int> idManzana, Nullable<int> idProyecto, Nullable<int> idCliente, Nullable<int> idVendedor, string companiaCodigo, string codigo, string descripcion, Nullable<int> idSede, string cliente, string documento, string tipoDocumento, Nullable<int> estado, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var idReservaParameter = idReserva.HasValue ?
                new ObjectParameter("IdReserva", idReserva) :
                new ObjectParameter("IdReserva", typeof(int));
    
            var idLoteParameter = idLote.HasValue ?
                new ObjectParameter("IdLote", idLote) :
                new ObjectParameter("IdLote", typeof(int));
    
            var idManzanaParameter = idManzana.HasValue ?
                new ObjectParameter("IdManzana", idManzana) :
                new ObjectParameter("IdManzana", typeof(int));
    
            var idProyectoParameter = idProyecto.HasValue ?
                new ObjectParameter("IdProyecto", idProyecto) :
                new ObjectParameter("IdProyecto", typeof(int));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var idVendedorParameter = idVendedor.HasValue ?
                new ObjectParameter("IdVendedor", idVendedor) :
                new ObjectParameter("IdVendedor", typeof(int));
    
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            var clienteParameter = cliente != null ?
                new ObjectParameter("Cliente", cliente) :
                new ObjectParameter("Cliente", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarReserva_Result>("WCO_ListarReserva", idReservaParameter, idLoteParameter, idManzanaParameter, idProyectoParameter, idClienteParameter, idVendedorParameter, companiaCodigoParameter, codigoParameter, descripcionParameter, idSedeParameter, clienteParameter, documentoParameter, tipoDocumentoParameter, estadoParameter, fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<WCO_ListarTablaMaestroDetalle_Result> WCO_ListarTablaMaestroDetalle(string codigoTabla)
        {
            var codigoTablaParameter = codigoTabla != null ?
                new ObjectParameter("CodigoTabla", codigoTabla) :
                new ObjectParameter("CodigoTabla", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarTablaMaestroDetalle_Result>("WCO_ListarTablaMaestroDetalle", codigoTablaParameter);
        }
    
        public virtual ObjectResult<WCO_ListarTablasMaestras_Result> WCO_ListarTablasMaestras(Nullable<int> idtabla, string nombre, Nullable<int> estado, string codigo)
        {
            var idtablaParameter = idtabla.HasValue ?
                new ObjectParameter("Idtabla", idtabla) :
                new ObjectParameter("Idtabla", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarTablasMaestras_Result>("WCO_ListarTablasMaestras", idtablaParameter, nombreParameter, estadoParameter, codigoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarTipoCambioMast_Result> WCO_ListarTipoCambioMast(string pFechacambio, Nullable<System.DateTime> pFechainicial, Nullable<System.DateTime> pFechaFinal, string pEstado)
        {
            var pFechacambioParameter = pFechacambio != null ?
                new ObjectParameter("PFechacambio", pFechacambio) :
                new ObjectParameter("PFechacambio", typeof(string));
    
            var pFechainicialParameter = pFechainicial.HasValue ?
                new ObjectParameter("PFechainicial", pFechainicial) :
                new ObjectParameter("PFechainicial", typeof(System.DateTime));
    
            var pFechaFinalParameter = pFechaFinal.HasValue ?
                new ObjectParameter("PFechaFinal", pFechaFinal) :
                new ObjectParameter("PFechaFinal", typeof(System.DateTime));
    
            var pEstadoParameter = pEstado != null ?
                new ObjectParameter("PEstado", pEstado) :
                new ObjectParameter("PEstado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarTipoCambioMast_Result>("WCO_ListarTipoCambioMast", pFechacambioParameter, pFechainicialParameter, pFechaFinalParameter, pEstadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarTipoCambioMo_Result> WCO_ListarTipoCambioMo(Nullable<System.DateTime> pFechacambio, Nullable<System.DateTime> pFechainicial, Nullable<System.DateTime> pFechaFinal, string pEstado)
        {
            var pFechacambioParameter = pFechacambio.HasValue ?
                new ObjectParameter("PFechacambio", pFechacambio) :
                new ObjectParameter("PFechacambio", typeof(System.DateTime));
    
            var pFechainicialParameter = pFechainicial.HasValue ?
                new ObjectParameter("PFechainicial", pFechainicial) :
                new ObjectParameter("PFechainicial", typeof(System.DateTime));
    
            var pFechaFinalParameter = pFechaFinal.HasValue ?
                new ObjectParameter("PFechaFinal", pFechaFinal) :
                new ObjectParameter("PFechaFinal", typeof(System.DateTime));
    
            var pEstadoParameter = pEstado != null ?
                new ObjectParameter("PEstado", pEstado) :
                new ObjectParameter("PEstado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarTipoCambioMo_Result>("WCO_ListarTipoCambioMo", pFechacambioParameter, pFechainicialParameter, pFechaFinalParameter, pEstadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarTMAestroDetalles_Result> WCO_ListarTMAestroDetalles(Nullable<int> idtablamaestro, Nullable<int> idcodigo, string nombre, Nullable<int> estado)
        {
            var idtablamaestroParameter = idtablamaestro.HasValue ?
                new ObjectParameter("idtablamaestro", idtablamaestro) :
                new ObjectParameter("idtablamaestro", typeof(int));
    
            var idcodigoParameter = idcodigo.HasValue ?
                new ObjectParameter("idcodigo", idcodigo) :
                new ObjectParameter("idcodigo", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarTMAestroDetalles_Result>("WCO_ListarTMAestroDetalles", idtablamaestroParameter, idcodigoParameter, nombreParameter, estadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarUbigeo_Result> WCO_ListarUbigeo(string pUbigeo, Nullable<int> nUM)
        {
            var pUbigeoParameter = pUbigeo != null ?
                new ObjectParameter("pUbigeo", pUbigeo) :
                new ObjectParameter("pUbigeo", typeof(string));
    
            var nUMParameter = nUM.HasValue ?
                new ObjectParameter("NUM", nUM) :
                new ObjectParameter("NUM", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarUbigeo_Result>("WCO_ListarUbigeo", pUbigeoParameter, nUMParameter);
        }
    
        public virtual int WCO_ListarUsuarioWeb(Nullable<int> idPersona, string nombre, string documento, string clasificadorMovimiento)
        {
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("IdPersona", idPersona) :
                new ObjectParameter("IdPersona", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var clasificadorMovimientoParameter = clasificadorMovimiento != null ?
                new ObjectParameter("ClasificadorMovimiento", clasificadorMovimiento) :
                new ObjectParameter("ClasificadorMovimiento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarUsuarioWeb", idPersonaParameter, nombreParameter, documentoParameter, clasificadorMovimientoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarBanco_Result> WCO_ListarBanco(string banco, string estado, string descripcionCorta)
        {
            var bancoParameter = banco != null ?
                new ObjectParameter("Banco", banco) :
                new ObjectParameter("Banco", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var descripcionCortaParameter = descripcionCorta != null ?
                new ObjectParameter("DescripcionCorta", descripcionCorta) :
                new ObjectParameter("DescripcionCorta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarBanco_Result>("WCO_ListarBanco", bancoParameter, estadoParameter, descripcionCortaParameter);
        }
    
        public virtual ObjectResult<WCO_ListarCorrelativosMast_Result> WCO_ListarCorrelativosMast(string companiaCodigo, string tipoComprobante, string serie, string sedCodigo, Nullable<int> idSede, string estado)
        {
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var tipoComprobanteParameter = tipoComprobante != null ?
                new ObjectParameter("TipoComprobante", tipoComprobante) :
                new ObjectParameter("TipoComprobante", typeof(string));
    
            var serieParameter = serie != null ?
                new ObjectParameter("Serie", serie) :
                new ObjectParameter("Serie", typeof(string));
    
            var sedCodigoParameter = sedCodigo != null ?
                new ObjectParameter("SedCodigo", sedCodigo) :
                new ObjectParameter("SedCodigo", typeof(string));
    
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarCorrelativosMast_Result>("WCO_ListarCorrelativosMast", companiaCodigoParameter, tipoComprobanteParameter, serieParameter, sedCodigoParameter, idSedeParameter, estadoParameter);
        }
    
        public virtual ObjectResult<WCO_LISTARASIGNARPERFILPAG_Result> WCO_LISTARASIGNARPERFILPAG(string perfil, string usuario, string nombrecompleto)
        {
            var perfilParameter = perfil != null ?
                new ObjectParameter("perfil", perfil) :
                new ObjectParameter("perfil", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var nombrecompletoParameter = nombrecompleto != null ?
                new ObjectParameter("nombrecompleto", nombrecompleto) :
                new ObjectParameter("nombrecompleto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_LISTARASIGNARPERFILPAG_Result>("WCO_LISTARASIGNARPERFILPAG", perfilParameter, usuarioParameter, nombrecompletoParameter);
        }
    
        public virtual int WCO_ListarPerfilHorario(Nullable<int> idPerfilHorario, string nombre, Nullable<int> estado)
        {
            var idPerfilHorarioParameter = idPerfilHorario.HasValue ?
                new ObjectParameter("IdPerfilHorario", idPerfilHorario) :
                new ObjectParameter("IdPerfilHorario", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarPerfilHorario", idPerfilHorarioParameter, nombreParameter, estadoParameter);
        }
    
        public virtual int WCO_TRAERUSUARIOXCODIGO(string uSUARIO)
        {
            var uSUARIOParameter = uSUARIO != null ?
                new ObjectParameter("USUARIO", uSUARIO) :
                new ObjectParameter("USUARIO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_TRAERUSUARIOXCODIGO", uSUARIOParameter);
        }
    
        public virtual int WCO_BUSCARPERSONAUSUARIO(string nOMBRECOMPLETO, string tipoDocumento, string documento, string tipopersona, Nullable<int> soloBeneficiarios, Nullable<int> idEmpresaEmpleadora)
        {
            var nOMBRECOMPLETOParameter = nOMBRECOMPLETO != null ?
                new ObjectParameter("NOMBRECOMPLETO", nOMBRECOMPLETO) :
                new ObjectParameter("NOMBRECOMPLETO", typeof(string));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var tipopersonaParameter = tipopersona != null ?
                new ObjectParameter("tipopersona", tipopersona) :
                new ObjectParameter("tipopersona", typeof(string));
    
            var soloBeneficiariosParameter = soloBeneficiarios.HasValue ?
                new ObjectParameter("SoloBeneficiarios", soloBeneficiarios) :
                new ObjectParameter("SoloBeneficiarios", typeof(int));
    
            var idEmpresaEmpleadoraParameter = idEmpresaEmpleadora.HasValue ?
                new ObjectParameter("idEmpresaEmpleadora", idEmpresaEmpleadora) :
                new ObjectParameter("idEmpresaEmpleadora", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_BUSCARPERSONAUSUARIO", nOMBRECOMPLETOParameter, tipoDocumentoParameter, documentoParameter, tipopersonaParameter, soloBeneficiariosParameter, idEmpresaEmpleadoraParameter);
        }
    
        public virtual ObjectResult<WCO_InsertarEgreso_Result> WCO_InsertarEgreso(Nullable<int> idEgreso, string codigo, string sucursal, Nullable<System.DateTime> fechaRegistro, Nullable<int> idEmpleado, string descripcion, Nullable<int> cantidad, Nullable<decimal> montoAfecto, Nullable<decimal> montoImpuesto, Nullable<decimal> montoTotal, Nullable<int> estado, string usuarioCreacion, string ipCreacion)
        {
            var idEgresoParameter = idEgreso.HasValue ?
                new ObjectParameter("IdEgreso", idEgreso) :
                new ObjectParameter("IdEgreso", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(string));
    
            var fechaRegistroParameter = fechaRegistro.HasValue ?
                new ObjectParameter("FechaRegistro", fechaRegistro) :
                new ObjectParameter("FechaRegistro", typeof(System.DateTime));
    
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var montoAfectoParameter = montoAfecto.HasValue ?
                new ObjectParameter("MontoAfecto", montoAfecto) :
                new ObjectParameter("MontoAfecto", typeof(decimal));
    
            var montoImpuestoParameter = montoImpuesto.HasValue ?
                new ObjectParameter("MontoImpuesto", montoImpuesto) :
                new ObjectParameter("MontoImpuesto", typeof(decimal));
    
            var montoTotalParameter = montoTotal.HasValue ?
                new ObjectParameter("MontoTotal", montoTotal) :
                new ObjectParameter("MontoTotal", typeof(decimal));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var ipCreacionParameter = ipCreacion != null ?
                new ObjectParameter("IpCreacion", ipCreacion) :
                new ObjectParameter("IpCreacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_InsertarEgreso_Result>("WCO_InsertarEgreso", idEgresoParameter, codigoParameter, sucursalParameter, fechaRegistroParameter, idEmpleadoParameter, descripcionParameter, cantidadParameter, montoAfectoParameter, montoImpuestoParameter, montoTotalParameter, estadoParameter, usuarioCreacionParameter, ipCreacionParameter);
        }
    
        public virtual ObjectResult<WCO_InsertarEgresoDetalle_Result> WCO_InsertarEgresoDetalle(Nullable<int> id, Nullable<int> idEgreso, Nullable<int> idProveedor, Nullable<System.DateTime> fechaRegistro, string tipoDocumento, string serie, string nroDocumento, string concepto, Nullable<int> tipoImpuesto, Nullable<int> cantidad, Nullable<decimal> montoAfecto, Nullable<decimal> montoImpuesto, Nullable<decimal> montoTotal, string archivo, Nullable<int> estado, string usuarioCreacion, string ipCreacion)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var idEgresoParameter = idEgreso.HasValue ?
                new ObjectParameter("IdEgreso", idEgreso) :
                new ObjectParameter("IdEgreso", typeof(int));
    
            var idProveedorParameter = idProveedor.HasValue ?
                new ObjectParameter("IdProveedor", idProveedor) :
                new ObjectParameter("IdProveedor", typeof(int));
    
            var fechaRegistroParameter = fechaRegistro.HasValue ?
                new ObjectParameter("FechaRegistro", fechaRegistro) :
                new ObjectParameter("FechaRegistro", typeof(System.DateTime));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var serieParameter = serie != null ?
                new ObjectParameter("Serie", serie) :
                new ObjectParameter("Serie", typeof(string));
    
            var nroDocumentoParameter = nroDocumento != null ?
                new ObjectParameter("NroDocumento", nroDocumento) :
                new ObjectParameter("NroDocumento", typeof(string));
    
            var conceptoParameter = concepto != null ?
                new ObjectParameter("Concepto", concepto) :
                new ObjectParameter("Concepto", typeof(string));
    
            var tipoImpuestoParameter = tipoImpuesto.HasValue ?
                new ObjectParameter("TipoImpuesto", tipoImpuesto) :
                new ObjectParameter("TipoImpuesto", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var montoAfectoParameter = montoAfecto.HasValue ?
                new ObjectParameter("MontoAfecto", montoAfecto) :
                new ObjectParameter("MontoAfecto", typeof(decimal));
    
            var montoImpuestoParameter = montoImpuesto.HasValue ?
                new ObjectParameter("MontoImpuesto", montoImpuesto) :
                new ObjectParameter("MontoImpuesto", typeof(decimal));
    
            var montoTotalParameter = montoTotal.HasValue ?
                new ObjectParameter("MontoTotal", montoTotal) :
                new ObjectParameter("MontoTotal", typeof(decimal));
    
            var archivoParameter = archivo != null ?
                new ObjectParameter("Archivo", archivo) :
                new ObjectParameter("Archivo", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var ipCreacionParameter = ipCreacion != null ?
                new ObjectParameter("IpCreacion", ipCreacion) :
                new ObjectParameter("IpCreacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_InsertarEgresoDetalle_Result>("WCO_InsertarEgresoDetalle", idParameter, idEgresoParameter, idProveedorParameter, fechaRegistroParameter, tipoDocumentoParameter, serieParameter, nroDocumentoParameter, conceptoParameter, tipoImpuestoParameter, cantidadParameter, montoAfectoParameter, montoImpuestoParameter, montoTotalParameter, archivoParameter, estadoParameter, usuarioCreacionParameter, ipCreacionParameter);
        }
    
        public virtual int WCO_ListarExpedienteParticulares(Nullable<int> uneuNegocioId, Nullable<int> idExpediente, string nroPeticion, string clasificadorMovimiento, Nullable<int> idTipoExpediente, Nullable<int> idTipoAdmision, Nullable<int> persona, string ordenAtencion, string historiaClinica, Nullable<int> idSede, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFinal, Nullable<int> estado, Nullable<int> estadoAdmsion)
        {
            var uneuNegocioIdParameter = uneuNegocioId.HasValue ?
                new ObjectParameter("UneuNegocioId", uneuNegocioId) :
                new ObjectParameter("UneuNegocioId", typeof(int));
    
            var idExpedienteParameter = idExpediente.HasValue ?
                new ObjectParameter("IdExpediente", idExpediente) :
                new ObjectParameter("IdExpediente", typeof(int));
    
            var nroPeticionParameter = nroPeticion != null ?
                new ObjectParameter("NroPeticion", nroPeticion) :
                new ObjectParameter("NroPeticion", typeof(string));
    
            var clasificadorMovimientoParameter = clasificadorMovimiento != null ?
                new ObjectParameter("ClasificadorMovimiento", clasificadorMovimiento) :
                new ObjectParameter("ClasificadorMovimiento", typeof(string));
    
            var idTipoExpedienteParameter = idTipoExpediente.HasValue ?
                new ObjectParameter("IdTipoExpediente", idTipoExpediente) :
                new ObjectParameter("IdTipoExpediente", typeof(int));
    
            var idTipoAdmisionParameter = idTipoAdmision.HasValue ?
                new ObjectParameter("IdTipoAdmision", idTipoAdmision) :
                new ObjectParameter("IdTipoAdmision", typeof(int));
    
            var personaParameter = persona.HasValue ?
                new ObjectParameter("Persona", persona) :
                new ObjectParameter("Persona", typeof(int));
    
            var ordenAtencionParameter = ordenAtencion != null ?
                new ObjectParameter("OrdenAtencion", ordenAtencion) :
                new ObjectParameter("OrdenAtencion", typeof(string));
    
            var historiaClinicaParameter = historiaClinica != null ?
                new ObjectParameter("HistoriaClinica", historiaClinica) :
                new ObjectParameter("HistoriaClinica", typeof(string));
    
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinalParameter = fechaFinal.HasValue ?
                new ObjectParameter("FechaFinal", fechaFinal) :
                new ObjectParameter("FechaFinal", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var estadoAdmsionParameter = estadoAdmsion.HasValue ?
                new ObjectParameter("EstadoAdmsion", estadoAdmsion) :
                new ObjectParameter("EstadoAdmsion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarExpedienteParticulares", uneuNegocioIdParameter, idExpedienteParameter, nroPeticionParameter, clasificadorMovimientoParameter, idTipoExpedienteParameter, idTipoAdmisionParameter, personaParameter, ordenAtencionParameter, historiaClinicaParameter, idSedeParameter, fechaInicioParameter, fechaFinalParameter, estadoParameter, estadoAdmsionParameter);
        }
    
        public virtual int WCO_ListarHorario(Nullable<int> idHorario, string nombre, Nullable<int> estado)
        {
            var idHorarioParameter = idHorario.HasValue ?
                new ObjectParameter("IdHorario", idHorario) :
                new ObjectParameter("IdHorario", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarHorario", idHorarioParameter, nombreParameter, estadoParameter);
        }
    
        public virtual int WCO_ListarListaBase(string descripcion, Nullable<int> estado)
        {
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarListaBase", descripcionParameter, estadoParameter);
        }
    
        public virtual int WCO_ListarPrinterCode(Nullable<int> id, Nullable<int> idAdmision, string ipHomologado, Nullable<int> estado)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var idAdmisionParameter = idAdmision.HasValue ?
                new ObjectParameter("IdAdmision", idAdmision) :
                new ObjectParameter("IdAdmision", typeof(int));
    
            var ipHomologadoParameter = ipHomologado != null ?
                new ObjectParameter("IpHomologado", ipHomologado) :
                new ObjectParameter("IpHomologado", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarPrinterCode", idParameter, idAdmisionParameter, ipHomologadoParameter, estadoParameter);
        }
    
        public virtual int WCO_ListarProcesoCajaDetalle(Nullable<int> idProcesoCaja)
        {
            var idProcesoCajaParameter = idProcesoCaja.HasValue ?
                new ObjectParameter("IdProcesoCaja", idProcesoCaja) :
                new ObjectParameter("IdProcesoCaja", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarProcesoCajaDetalle", idProcesoCajaParameter);
        }
    
        public virtual int WCO_ListarProduccion(Nullable<int> tipoAdmisionId, Nullable<int> clienteId, Nullable<int> tipoPacienteId, Nullable<int> idSede, Nullable<int> tipoAtencionId, Nullable<int> aseguradoraId, Nullable<int> empresaId, Nullable<int> pacienteId, Nullable<int> tipoOperacionId, Nullable<int> idClasificacion, string codigoComponente, string nombreComponente, Nullable<System.DateTime> pFecha1, Nullable<System.DateTime> pFecha2, string clasificadorMovimiento, Nullable<int> estado, string periodo, string nroPeticion)
        {
            var tipoAdmisionIdParameter = tipoAdmisionId.HasValue ?
                new ObjectParameter("TipoAdmisionId", tipoAdmisionId) :
                new ObjectParameter("TipoAdmisionId", typeof(int));
    
            var clienteIdParameter = clienteId.HasValue ?
                new ObjectParameter("ClienteId", clienteId) :
                new ObjectParameter("ClienteId", typeof(int));
    
            var tipoPacienteIdParameter = tipoPacienteId.HasValue ?
                new ObjectParameter("TipoPacienteId", tipoPacienteId) :
                new ObjectParameter("TipoPacienteId", typeof(int));
    
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            var tipoAtencionIdParameter = tipoAtencionId.HasValue ?
                new ObjectParameter("TipoAtencionId", tipoAtencionId) :
                new ObjectParameter("TipoAtencionId", typeof(int));
    
            var aseguradoraIdParameter = aseguradoraId.HasValue ?
                new ObjectParameter("AseguradoraId", aseguradoraId) :
                new ObjectParameter("AseguradoraId", typeof(int));
    
            var empresaIdParameter = empresaId.HasValue ?
                new ObjectParameter("EmpresaId", empresaId) :
                new ObjectParameter("EmpresaId", typeof(int));
    
            var pacienteIdParameter = pacienteId.HasValue ?
                new ObjectParameter("PacienteId", pacienteId) :
                new ObjectParameter("PacienteId", typeof(int));
    
            var tipoOperacionIdParameter = tipoOperacionId.HasValue ?
                new ObjectParameter("TipoOperacionId", tipoOperacionId) :
                new ObjectParameter("TipoOperacionId", typeof(int));
    
            var idClasificacionParameter = idClasificacion.HasValue ?
                new ObjectParameter("IdClasificacion", idClasificacion) :
                new ObjectParameter("IdClasificacion", typeof(int));
    
            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));
    
            var nombreComponenteParameter = nombreComponente != null ?
                new ObjectParameter("NombreComponente", nombreComponente) :
                new ObjectParameter("NombreComponente", typeof(string));
    
            var pFecha1Parameter = pFecha1.HasValue ?
                new ObjectParameter("pFecha1", pFecha1) :
                new ObjectParameter("pFecha1", typeof(System.DateTime));
    
            var pFecha2Parameter = pFecha2.HasValue ?
                new ObjectParameter("pFecha2", pFecha2) :
                new ObjectParameter("pFecha2", typeof(System.DateTime));
    
            var clasificadorMovimientoParameter = clasificadorMovimiento != null ?
                new ObjectParameter("ClasificadorMovimiento", clasificadorMovimiento) :
                new ObjectParameter("ClasificadorMovimiento", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            var nroPeticionParameter = nroPeticion != null ?
                new ObjectParameter("NroPeticion", nroPeticion) :
                new ObjectParameter("NroPeticion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarProduccion", tipoAdmisionIdParameter, clienteIdParameter, tipoPacienteIdParameter, idSedeParameter, tipoAtencionIdParameter, aseguradoraIdParameter, empresaIdParameter, pacienteIdParameter, tipoOperacionIdParameter, idClasificacionParameter, codigoComponenteParameter, nombreComponenteParameter, pFecha1Parameter, pFecha2Parameter, clasificadorMovimientoParameter, estadoParameter, periodoParameter, nroPeticionParameter);
        }
    
        public virtual int WCO_ListarProduccionGeneral(Nullable<int> uneuNegocioId, string periodo)
        {
            var uneuNegocioIdParameter = uneuNegocioId.HasValue ?
                new ObjectParameter("UneuNegocioId", uneuNegocioId) :
                new ObjectParameter("UneuNegocioId", typeof(int));
    
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarProduccionGeneral", uneuNegocioIdParameter, periodoParameter);
        }
    
        public virtual int WCO_ListarResumen(Nullable<int> idResumen, string companiaCodigo, string tipoResumen, string nombre, Nullable<System.DateTime> fechaIni, Nullable<System.DateTime> fechaFin, string codigoRespuesta, Nullable<int> estado)
        {
            var idResumenParameter = idResumen.HasValue ?
                new ObjectParameter("IdResumen", idResumen) :
                new ObjectParameter("IdResumen", typeof(int));
    
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var tipoResumenParameter = tipoResumen != null ?
                new ObjectParameter("TipoResumen", tipoResumen) :
                new ObjectParameter("TipoResumen", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var fechaIniParameter = fechaIni.HasValue ?
                new ObjectParameter("FechaIni", fechaIni) :
                new ObjectParameter("FechaIni", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var codigoRespuestaParameter = codigoRespuesta != null ?
                new ObjectParameter("CodigoRespuesta", codigoRespuesta) :
                new ObjectParameter("CodigoRespuesta", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarResumen", idResumenParameter, companiaCodigoParameter, tipoResumenParameter, nombreParameter, fechaIniParameter, fechaFinParameter, codigoRespuestaParameter, estadoParameter);
        }
    
        public virtual int WCO_ListarResumenDetalle(Nullable<int> idSecuencia, Nullable<int> idResumen, string companiaCodigo, Nullable<int> tipoResumen, Nullable<System.DateTime> fechaIni, Nullable<System.DateTime> fechaFin, Nullable<int> estado)
        {
            var idSecuenciaParameter = idSecuencia.HasValue ?
                new ObjectParameter("IdSecuencia", idSecuencia) :
                new ObjectParameter("IdSecuencia", typeof(int));
    
            var idResumenParameter = idResumen.HasValue ?
                new ObjectParameter("IdResumen", idResumen) :
                new ObjectParameter("IdResumen", typeof(int));
    
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var tipoResumenParameter = tipoResumen.HasValue ?
                new ObjectParameter("TipoResumen", tipoResumen) :
                new ObjectParameter("TipoResumen", typeof(int));
    
            var fechaIniParameter = fechaIni.HasValue ?
                new ObjectParameter("FechaIni", fechaIni) :
                new ObjectParameter("FechaIni", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarResumenDetalle", idSecuenciaParameter, idResumenParameter, companiaCodigoParameter, tipoResumenParameter, fechaIniParameter, fechaFinParameter, estadoParameter);
        }
    
        public virtual int WCO_ListarResumenEnvioTCI(Nullable<int> idResumen, string companiaCodigo, Nullable<int> estado)
        {
            var idResumenParameter = idResumen.HasValue ?
                new ObjectParameter("IdResumen", idResumen) :
                new ObjectParameter("IdResumen", typeof(int));
    
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarResumenEnvioTCI", idResumenParameter, companiaCodigoParameter, estadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarSede_Result> WCO_ListarSede(string descripcionLocal, Nullable<int> idSede, string sedCodigo, Nullable<int> idEmpresa, Nullable<int> estado)
        {
            var descripcionLocalParameter = descripcionLocal != null ?
                new ObjectParameter("DescripcionLocal", descripcionLocal) :
                new ObjectParameter("DescripcionLocal", typeof(string));
    
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            var sedCodigoParameter = sedCodigo != null ?
                new ObjectParameter("SedCodigo", sedCodigo) :
                new ObjectParameter("SedCodigo", typeof(string));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarSede_Result>("WCO_ListarSede", descripcionLocalParameter, idSedeParameter, sedCodigoParameter, idEmpresaParameter, estadoParameter);
        }
    
        public virtual int WCO_ListarSedeCliente(Nullable<int> idSede, Nullable<int> idEmpresa, Nullable<int> idSedeCliente, string nombreCompleto, string sedCodigo)
        {
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var idSedeClienteParameter = idSedeCliente.HasValue ?
                new ObjectParameter("IdSedeCliente", idSedeCliente) :
                new ObjectParameter("IdSedeCliente", typeof(int));
    
            var nombreCompletoParameter = nombreCompleto != null ?
                new ObjectParameter("NombreCompleto", nombreCompleto) :
                new ObjectParameter("NombreCompleto", typeof(string));
    
            var sedCodigoParameter = sedCodigo != null ?
                new ObjectParameter("SedCodigo", sedCodigo) :
                new ObjectParameter("SedCodigo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarSedeCliente", idSedeParameter, idEmpresaParameter, idSedeClienteParameter, nombreCompletoParameter, sedCodigoParameter);
        }
    
        public virtual int WCO_ListarSedePrinter(Nullable<int> idPrinter, Nullable<int> idSede, string ip, string shared_Name)
        {
            var idPrinterParameter = idPrinter.HasValue ?
                new ObjectParameter("IdPrinter", idPrinter) :
                new ObjectParameter("IdPrinter", typeof(int));
    
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            var ipParameter = ip != null ?
                new ObjectParameter("Ip", ip) :
                new ObjectParameter("Ip", typeof(string));
    
            var shared_NameParameter = shared_Name != null ?
                new ObjectParameter("Shared_Name", shared_Name) :
                new ObjectParameter("Shared_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarSedePrinter", idPrinterParameter, idSedeParameter, ipParameter, shared_NameParameter);
        }
    
        public virtual int WCO_ListarSedeSucursal(string clasificadorMovimiento, string companiaCodigo, string sucursal, Nullable<int> idSede, string estado)
        {
            var clasificadorMovimientoParameter = clasificadorMovimiento != null ?
                new ObjectParameter("ClasificadorMovimiento", clasificadorMovimiento) :
                new ObjectParameter("ClasificadorMovimiento", typeof(string));
    
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(string));
    
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarSedeSucursal", clasificadorMovimientoParameter, companiaCodigoParameter, sucursalParameter, idSedeParameter, estadoParameter);
        }
    
        public virtual int WCO_ListarSedeSucursalNegocio(string clasificadorMovimiento, string companiaCodigo, string sucursal, Nullable<int> idSede, string tipoComprobante, string serie, string estado)
        {
            var clasificadorMovimientoParameter = clasificadorMovimiento != null ?
                new ObjectParameter("ClasificadorMovimiento", clasificadorMovimiento) :
                new ObjectParameter("ClasificadorMovimiento", typeof(string));
    
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(string));
    
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            var tipoComprobanteParameter = tipoComprobante != null ?
                new ObjectParameter("TipoComprobante", tipoComprobante) :
                new ObjectParameter("TipoComprobante", typeof(string));
    
            var serieParameter = serie != null ?
                new ObjectParameter("Serie", serie) :
                new ObjectParameter("Serie", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarSedeSucursalNegocio", clasificadorMovimientoParameter, companiaCodigoParameter, sucursalParameter, idSedeParameter, tipoComprobanteParameter, serieParameter, estadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarSerie_Result> WCO_ListarSerie(string compania, string tipoComprobante)
        {
            var companiaParameter = compania != null ?
                new ObjectParameter("Compania", compania) :
                new ObjectParameter("Compania", typeof(string));
    
            var tipoComprobanteParameter = tipoComprobante != null ?
                new ObjectParameter("TipoComprobante", tipoComprobante) :
                new ObjectParameter("TipoComprobante", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarSerie_Result>("WCO_ListarSerie", companiaParameter, tipoComprobanteParameter);
        }
    
        public virtual int WCO_ListarSinapa(Nullable<int> pIdAdmision)
        {
            var pIdAdmisionParameter = pIdAdmision.HasValue ?
                new ObjectParameter("pIdAdmision", pIdAdmision) :
                new ObjectParameter("pIdAdmision", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarSinapa", pIdAdmisionParameter);
        }
    
        public virtual int WCO_ListarSucursal(string descripcionLocal, string sucursal, string companiaCodigo, string estado)
        {
            var descripcionLocalParameter = descripcionLocal != null ?
                new ObjectParameter("DescripcionLocal", descripcionLocal) :
                new ObjectParameter("DescripcionLocal", typeof(string));
    
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(string));
    
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarSucursal", descripcionLocalParameter, sucursalParameter, companiaCodigoParameter, estadoParameter);
        }
    
        public virtual int WCO_ListarSucursalCompSerie(string clasificadorMovimiento, string companiaCodigo, string sucursal, string tipoComprobante, string estado)
        {
            var clasificadorMovimientoParameter = clasificadorMovimiento != null ?
                new ObjectParameter("ClasificadorMovimiento", clasificadorMovimiento) :
                new ObjectParameter("ClasificadorMovimiento", typeof(string));
    
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(string));
    
            var tipoComprobanteParameter = tipoComprobante != null ?
                new ObjectParameter("TipoComprobante", tipoComprobante) :
                new ObjectParameter("TipoComprobante", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarSucursalCompSerie", clasificadorMovimientoParameter, companiaCodigoParameter, sucursalParameter, tipoComprobanteParameter, estadoParameter);
        }
    
        public virtual int WCO_ListarSucursalSerie(string companiaCodigo, string tipoComprobante, string serie, string sucursal)
        {
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var tipoComprobanteParameter = tipoComprobante != null ?
                new ObjectParameter("TipoComprobante", tipoComprobante) :
                new ObjectParameter("TipoComprobante", typeof(string));
    
            var serieParameter = serie != null ?
                new ObjectParameter("Serie", serie) :
                new ObjectParameter("Serie", typeof(string));
    
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarSucursalSerie", companiaCodigoParameter, tipoComprobanteParameter, serieParameter, sucursalParameter);
        }
    
        public virtual ObjectResult<WCO_ListarTablaMaestroArchivo_Result> WCO_ListarTablaMaestroArchivo(Nullable<int> id, string tabla, Nullable<int> idTabla, Nullable<int> linea, Nullable<int> estado)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var tablaParameter = tabla != null ?
                new ObjectParameter("Tabla", tabla) :
                new ObjectParameter("Tabla", typeof(string));
    
            var idTablaParameter = idTabla.HasValue ?
                new ObjectParameter("IdTabla", idTabla) :
                new ObjectParameter("IdTabla", typeof(int));
    
            var lineaParameter = linea.HasValue ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarTablaMaestroArchivo_Result>("WCO_ListarTablaMaestroArchivo", idParameter, tablaParameter, idTablaParameter, lineaParameter, estadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarTipoCambioComercial_Result> WCO_ListarTipoCambioComercial(Nullable<int> idTipoCambio, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, string estado)
        {
            var idTipoCambioParameter = idTipoCambio.HasValue ?
                new ObjectParameter("IdTipoCambio", idTipoCambio) :
                new ObjectParameter("IdTipoCambio", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarTipoCambioComercial_Result>("WCO_ListarTipoCambioComercial", idTipoCambioParameter, fechaInicioParameter, fechaFinParameter, estadoParameter);
        }
    
        public virtual int WCO_ListarTipodeAdmision(string admCodigo, string admDescripcion, Nullable<int> admEstado)
        {
            var admCodigoParameter = admCodigo != null ?
                new ObjectParameter("AdmCodigo", admCodigo) :
                new ObjectParameter("AdmCodigo", typeof(string));
    
            var admDescripcionParameter = admDescripcion != null ?
                new ObjectParameter("AdmDescripcion", admDescripcion) :
                new ObjectParameter("AdmDescripcion", typeof(string));
    
            var admEstadoParameter = admEstado.HasValue ?
                new ObjectParameter("AdmEstado", admEstado) :
                new ObjectParameter("AdmEstado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarTipodeAdmision", admCodigoParameter, admDescripcionParameter, admEstadoParameter);
        }
    
        public virtual int WCO_ListarTipoOperacion(Nullable<int> uneuNegocioId, Nullable<int> tipoOperacionId, Nullable<int> persona, Nullable<int> tipoAdmisionId, Nullable<int> tipEstado, Nullable<int> tipoPacienteId, Nullable<int> idSede, Nullable<int> idSedeCliente, string sedCodigo)
        {
            var uneuNegocioIdParameter = uneuNegocioId.HasValue ?
                new ObjectParameter("UneuNegocioId", uneuNegocioId) :
                new ObjectParameter("UneuNegocioId", typeof(int));
    
            var tipoOperacionIdParameter = tipoOperacionId.HasValue ?
                new ObjectParameter("TipoOperacionId", tipoOperacionId) :
                new ObjectParameter("TipoOperacionId", typeof(int));
    
            var personaParameter = persona.HasValue ?
                new ObjectParameter("Persona", persona) :
                new ObjectParameter("Persona", typeof(int));
    
            var tipoAdmisionIdParameter = tipoAdmisionId.HasValue ?
                new ObjectParameter("TipoAdmisionId", tipoAdmisionId) :
                new ObjectParameter("TipoAdmisionId", typeof(int));
    
            var tipEstadoParameter = tipEstado.HasValue ?
                new ObjectParameter("TipEstado", tipEstado) :
                new ObjectParameter("TipEstado", typeof(int));
    
            var tipoPacienteIdParameter = tipoPacienteId.HasValue ?
                new ObjectParameter("TipoPacienteId", tipoPacienteId) :
                new ObjectParameter("TipoPacienteId", typeof(int));
    
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            var idSedeClienteParameter = idSedeCliente.HasValue ?
                new ObjectParameter("IdSedeCliente", idSedeCliente) :
                new ObjectParameter("IdSedeCliente", typeof(int));
    
            var sedCodigoParameter = sedCodigo != null ?
                new ObjectParameter("SedCodigo", sedCodigo) :
                new ObjectParameter("SedCodigo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarTipoOperacion", uneuNegocioIdParameter, tipoOperacionIdParameter, personaParameter, tipoAdmisionIdParameter, tipEstadoParameter, tipoPacienteIdParameter, idSedeParameter, idSedeClienteParameter, sedCodigoParameter);
        }
    
        public virtual int WCO_ListarTipoOperacionCliente(Nullable<int> uneuNegocioId, Nullable<int> persona, Nullable<int> tipoAdmisionId, Nullable<int> tipEstado, string cliente, string documento, Nullable<int> idSede, string sedCodigo)
        {
            var uneuNegocioIdParameter = uneuNegocioId.HasValue ?
                new ObjectParameter("UneuNegocioId", uneuNegocioId) :
                new ObjectParameter("UneuNegocioId", typeof(int));
    
            var personaParameter = persona.HasValue ?
                new ObjectParameter("Persona", persona) :
                new ObjectParameter("Persona", typeof(int));
    
            var tipoAdmisionIdParameter = tipoAdmisionId.HasValue ?
                new ObjectParameter("TipoAdmisionId", tipoAdmisionId) :
                new ObjectParameter("TipoAdmisionId", typeof(int));
    
            var tipEstadoParameter = tipEstado.HasValue ?
                new ObjectParameter("TipEstado", tipEstado) :
                new ObjectParameter("TipEstado", typeof(int));
    
            var clienteParameter = cliente != null ?
                new ObjectParameter("Cliente", cliente) :
                new ObjectParameter("Cliente", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            var sedCodigoParameter = sedCodigo != null ?
                new ObjectParameter("SedCodigo", sedCodigo) :
                new ObjectParameter("SedCodigo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarTipoOperacionCliente", uneuNegocioIdParameter, personaParameter, tipoAdmisionIdParameter, tipEstadoParameter, clienteParameter, documentoParameter, idSedeParameter, sedCodigoParameter);
        }
    
        public virtual int WCO_ListarTipoOperacionClienteSede(Nullable<int> uneuNegocioId, Nullable<int> persona, Nullable<int> tipoAdmisionId, Nullable<int> tipEstado)
        {
            var uneuNegocioIdParameter = uneuNegocioId.HasValue ?
                new ObjectParameter("UneuNegocioId", uneuNegocioId) :
                new ObjectParameter("UneuNegocioId", typeof(int));
    
            var personaParameter = persona.HasValue ?
                new ObjectParameter("Persona", persona) :
                new ObjectParameter("Persona", typeof(int));
    
            var tipoAdmisionIdParameter = tipoAdmisionId.HasValue ?
                new ObjectParameter("TipoAdmisionId", tipoAdmisionId) :
                new ObjectParameter("TipoAdmisionId", typeof(int));
    
            var tipEstadoParameter = tipEstado.HasValue ?
                new ObjectParameter("TipEstado", tipEstado) :
                new ObjectParameter("TipEstado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarTipoOperacionClienteSede", uneuNegocioIdParameter, personaParameter, tipoAdmisionIdParameter, tipEstadoParameter);
        }
    
        public virtual int WCO_ListarTipoOperacionClienteTipoPaciente(Nullable<int> uneuNegocioId, Nullable<int> persona, Nullable<int> tipoAdmisionId, Nullable<int> tipEstado)
        {
            var uneuNegocioIdParameter = uneuNegocioId.HasValue ?
                new ObjectParameter("UneuNegocioId", uneuNegocioId) :
                new ObjectParameter("UneuNegocioId", typeof(int));
    
            var personaParameter = persona.HasValue ?
                new ObjectParameter("Persona", persona) :
                new ObjectParameter("Persona", typeof(int));
    
            var tipoAdmisionIdParameter = tipoAdmisionId.HasValue ?
                new ObjectParameter("TipoAdmisionId", tipoAdmisionId) :
                new ObjectParameter("TipoAdmisionId", typeof(int));
    
            var tipEstadoParameter = tipEstado.HasValue ?
                new ObjectParameter("TipEstado", tipEstado) :
                new ObjectParameter("TipEstado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarTipoOperacionClienteTipoPaciente", uneuNegocioIdParameter, personaParameter, tipoAdmisionIdParameter, tipEstadoParameter);
        }
    
        public virtual int WCO_ListarTipoOperacionPrecio(Nullable<int> tipoOperacionID, Nullable<int> estado)
        {
            var tipoOperacionIDParameter = tipoOperacionID.HasValue ?
                new ObjectParameter("TipoOperacionID", tipoOperacionID) :
                new ObjectParameter("TipoOperacionID", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarTipoOperacionPrecio", tipoOperacionIDParameter, estadoParameter);
        }
    
        public virtual int WCO_ListarTipoPaciente(Nullable<int> tipoPacienteId, Nullable<int> tipoAdmisionId, string codigo, string descripcion, Nullable<int> estado)
        {
            var tipoPacienteIdParameter = tipoPacienteId.HasValue ?
                new ObjectParameter("TipoPacienteId", tipoPacienteId) :
                new ObjectParameter("TipoPacienteId", typeof(int));
    
            var tipoAdmisionIdParameter = tipoAdmisionId.HasValue ?
                new ObjectParameter("TipoAdmisionId", tipoAdmisionId) :
                new ObjectParameter("TipoAdmisionId", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarTipoPaciente", tipoPacienteIdParameter, tipoAdmisionIdParameter, codigoParameter, descripcionParameter, estadoParameter);
        }
    
        public virtual int WCO_ListarTipoPago(Nullable<int> id, Nullable<int> idCodigo, string nombre, Nullable<int> estado, Nullable<int> visible)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var idCodigoParameter = idCodigo.HasValue ?
                new ObjectParameter("IdCodigo", idCodigo) :
                new ObjectParameter("IdCodigo", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var visibleParameter = visible.HasValue ?
                new ObjectParameter("Visible", visible) :
                new ObjectParameter("Visible", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarTipoPago", idParameter, idCodigoParameter, nombreParameter, estadoParameter, visibleParameter);
        }
    
        public virtual int WCO_ListarTipoTrabajador(string pTipoTrabajador, string pDescripcion, string pEstado)
        {
            var pTipoTrabajadorParameter = pTipoTrabajador != null ?
                new ObjectParameter("pTipoTrabajador", pTipoTrabajador) :
                new ObjectParameter("pTipoTrabajador", typeof(string));
    
            var pDescripcionParameter = pDescripcion != null ?
                new ObjectParameter("pDescripcion", pDescripcion) :
                new ObjectParameter("pDescripcion", typeof(string));
    
            var pEstadoParameter = pEstado != null ?
                new ObjectParameter("pEstado", pEstado) :
                new ObjectParameter("pEstado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarTipoTrabajador", pTipoTrabajadorParameter, pDescripcionParameter, pEstadoParameter);
        }
    
        public virtual int WCO_ListarUsuarioSede(string usuario, Nullable<int> idSede)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarUsuarioSede", usuarioParameter, idSedeParameter);
        }
    
        public virtual ObjectResult<WCO_TraerCompGrupCaractxId_Result> WCO_TraerCompGrupCaractxId(Nullable<int> idGrupoComponente)
        {
            var idGrupoComponenteParameter = idGrupoComponente.HasValue ?
                new ObjectParameter("IdGrupoComponente", idGrupoComponente) :
                new ObjectParameter("IdGrupoComponente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_TraerCompGrupCaractxId_Result>("WCO_TraerCompGrupCaractxId", idGrupoComponenteParameter);
        }
    
        public virtual int WCO_TraerEmpresaPlan(Nullable<int> empresaAseguradora)
        {
            var empresaAseguradoraParameter = empresaAseguradora.HasValue ?
                new ObjectParameter("EmpresaAseguradora", empresaAseguradora) :
                new ObjectParameter("EmpresaAseguradora", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_TraerEmpresaPlan", empresaAseguradoraParameter);
        }
    
        public virtual ObjectResult<WCO_TraerIDPersonaxCorreo_Result> WCO_TraerIDPersonaxCorreo(string pERSONAcorreo)
        {
            var pERSONAcorreoParameter = pERSONAcorreo != null ?
                new ObjectParameter("PERSONAcorreo", pERSONAcorreo) :
                new ObjectParameter("PERSONAcorreo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_TraerIDPersonaxCorreo_Result>("WCO_TraerIDPersonaxCorreo", pERSONAcorreoParameter);
        }
    
        public virtual int WCO_TraerModeloServicioxId(Nullable<int> modeloServicioId)
        {
            var modeloServicioIdParameter = modeloServicioId.HasValue ?
                new ObjectParameter("ModeloServicioId", modeloServicioId) :
                new ObjectParameter("ModeloServicioId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_TraerModeloServicioxId", modeloServicioIdParameter);
        }
    
        public virtual ObjectResult<WCO_traerperfil_Result> WCO_traerperfil(string perfil)
        {
            var perfilParameter = perfil != null ?
                new ObjectParameter("perfil", perfil) :
                new ObjectParameter("perfil", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_traerperfil_Result>("WCO_traerperfil", perfilParameter);
        }
    
        public virtual int WCO_TraerPorCodigoMedico(Nullable<int> estado, string documento, string cMP, Nullable<int> medicoId)
        {
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var cMPParameter = cMP != null ?
                new ObjectParameter("CMP", cMP) :
                new ObjectParameter("CMP", typeof(string));
    
            var medicoIdParameter = medicoId.HasValue ?
                new ObjectParameter("MedicoId", medicoId) :
                new ObjectParameter("MedicoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_TraerPorCodigoMedico", estadoParameter, documentoParameter, cMPParameter, medicoIdParameter);
        }
    
        public virtual int WCO_TraerPorIdPolizaPlan(Nullable<int> idPolizaPlan, Nullable<int> idPaciente)
        {
            var idPolizaPlanParameter = idPolizaPlan.HasValue ?
                new ObjectParameter("IdPolizaPlan", idPolizaPlan) :
                new ObjectParameter("IdPolizaPlan", typeof(int));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_TraerPorIdPolizaPlan", idPolizaPlanParameter, idPacienteParameter);
        }
    
        public virtual int WCO_TraerTIPOADMISIONxId(Nullable<int> tipoAdmisionId)
        {
            var tipoAdmisionIdParameter = tipoAdmisionId.HasValue ?
                new ObjectParameter("TipoAdmisionId", tipoAdmisionId) :
                new ObjectParameter("TipoAdmisionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_TraerTIPOADMISIONxId", tipoAdmisionIdParameter);
        }
    
        public virtual int WCO_TraerTipoOperacionCliente(Nullable<int> uneuNegocioId, Nullable<int> tipoAdmisionId, Nullable<int> tipEstado, string documento)
        {
            var uneuNegocioIdParameter = uneuNegocioId.HasValue ?
                new ObjectParameter("UneuNegocioId", uneuNegocioId) :
                new ObjectParameter("UneuNegocioId", typeof(int));
    
            var tipoAdmisionIdParameter = tipoAdmisionId.HasValue ?
                new ObjectParameter("TipoAdmisionId", tipoAdmisionId) :
                new ObjectParameter("TipoAdmisionId", typeof(int));
    
            var tipEstadoParameter = tipEstado.HasValue ?
                new ObjectParameter("TipEstado", tipEstado) :
                new ObjectParameter("TipEstado", typeof(int));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_TraerTipoOperacionCliente", uneuNegocioIdParameter, tipoAdmisionIdParameter, tipEstadoParameter, documentoParameter);
        }
    
        public virtual int WCO_TraerTipoOperacionxCodigo(Nullable<int> uneuNegocioId, Nullable<int> tipoAdmisionId, Nullable<int> persona, Nullable<int> tipEstado, Nullable<int> tipoPacienteId, Nullable<int> idSede)
        {
            var uneuNegocioIdParameter = uneuNegocioId.HasValue ?
                new ObjectParameter("UneuNegocioId", uneuNegocioId) :
                new ObjectParameter("UneuNegocioId", typeof(int));
    
            var tipoAdmisionIdParameter = tipoAdmisionId.HasValue ?
                new ObjectParameter("TipoAdmisionId", tipoAdmisionId) :
                new ObjectParameter("TipoAdmisionId", typeof(int));
    
            var personaParameter = persona.HasValue ?
                new ObjectParameter("Persona", persona) :
                new ObjectParameter("Persona", typeof(int));
    
            var tipEstadoParameter = tipEstado.HasValue ?
                new ObjectParameter("TipEstado", tipEstado) :
                new ObjectParameter("TipEstado", typeof(int));
    
            var tipoPacienteIdParameter = tipoPacienteId.HasValue ?
                new ObjectParameter("TipoPacienteId", tipoPacienteId) :
                new ObjectParameter("TipoPacienteId", typeof(int));
    
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_TraerTipoOperacionxCodigo", uneuNegocioIdParameter, tipoAdmisionIdParameter, personaParameter, tipEstadoParameter, tipoPacienteIdParameter, idSedeParameter);
        }
    
        public virtual int WCO_TraerTipoOperacionxId(Nullable<int> tipoOperacionId)
        {
            var tipoOperacionIdParameter = tipoOperacionId.HasValue ?
                new ObjectParameter("TipoOperacionId", tipoOperacionId) :
                new ObjectParameter("TipoOperacionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_TraerTipoOperacionxId", tipoOperacionIdParameter);
        }
    
        public virtual int WCO_TraerUltimoServicio(Nullable<int> persona)
        {
            var personaParameter = persona.HasValue ?
                new ObjectParameter("Persona", persona) :
                new ObjectParameter("Persona", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_TraerUltimoServicio", personaParameter);
        }
    
        public virtual int WCO_TraerXAdmisionServicio(Nullable<int> pIdAdmision)
        {
            var pIdAdmisionParameter = pIdAdmision.HasValue ?
                new ObjectParameter("pIdAdmision", pIdAdmision) :
                new ObjectParameter("pIdAdmision", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_TraerXAdmisionServicio", pIdAdmisionParameter);
        }
    
        public virtual int WCO_TraerXArqueo(Nullable<int> idArqueo)
        {
            var idArqueoParameter = idArqueo.HasValue ?
                new ObjectParameter("IdArqueo", idArqueo) :
                new ObjectParameter("IdArqueo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_TraerXArqueo", idArqueoParameter);
        }
    
        public virtual int WCO_TraerXAutorizacionBeneficiario(Nullable<int> idAutorizacion)
        {
            var idAutorizacionParameter = idAutorizacion.HasValue ?
                new ObjectParameter("IdAutorizacion", idAutorizacion) :
                new ObjectParameter("IdAutorizacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_TraerXAutorizacionBeneficiario", idAutorizacionParameter);
        }
    
        public virtual int WCO_TraerXAutorizacionXPaciente(Nullable<int> idPaciente)
        {
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_TraerXAutorizacionXPaciente", idPacienteParameter);
        }
    
        public virtual ObjectResult<WCO_TraerXCodigoPersonaId_Result> WCO_TraerXCodigoPersonaId(Nullable<int> pERSONA)
        {
            var pERSONAParameter = pERSONA.HasValue ?
                new ObjectParameter("PERSONA", pERSONA) :
                new ObjectParameter("PERSONA", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_TraerXCodigoPersonaId_Result>("WCO_TraerXCodigoPersonaId", pERSONAParameter);
        }
    
        public virtual int WCO_TraerXComponente(string codigoComponente)
        {
            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_TraerXComponente", codigoComponenteParameter);
        }
    
        public virtual ObjectResult<WCO_TraerXCuentaBancaria_Result> WCO_TraerXCuentaBancaria(string cuentaBancaria)
        {
            var cuentaBancariaParameter = cuentaBancaria != null ?
                new ObjectParameter("CuentaBancaria", cuentaBancaria) :
                new ObjectParameter("CuentaBancaria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_TraerXCuentaBancaria_Result>("WCO_TraerXCuentaBancaria", cuentaBancariaParameter);
        }
    
        public virtual int WCO_TraerXIdSede(Nullable<int> idSede, Nullable<int> persona)
        {
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            var personaParameter = persona.HasValue ?
                new ObjectParameter("Persona", persona) :
                new ObjectParameter("Persona", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_TraerXIdSede", idSedeParameter, personaParameter);
        }
    
        public virtual int WCO_TraerXListaBase(Nullable<int> idListaBase)
        {
            var idListaBaseParameter = idListaBase.HasValue ?
                new ObjectParameter("IdListaBase", idListaBase) :
                new ObjectParameter("IdListaBase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_TraerXListaBase", idListaBaseParameter);
        }
    
        public virtual int WCO_TraerXListaBaseComponente(string codigoComponente, Nullable<int> idListaBase)
        {
            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));
    
            var idListaBaseParameter = idListaBase.HasValue ?
                new ObjectParameter("IdListaBase", idListaBase) :
                new ObjectParameter("IdListaBase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_TraerXListaBaseComponente", codigoComponenteParameter, idListaBaseParameter);
        }
    
        public virtual int WCO_TraerXOAAdmisionServicio(Nullable<int> idSede, string ordenAtencion)
        {
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            var ordenAtencionParameter = ordenAtencion != null ?
                new ObjectParameter("OrdenAtencion", ordenAtencion) :
                new ObjectParameter("OrdenAtencion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_TraerXOAAdmisionServicio", idSedeParameter, ordenAtencionParameter);
        }
    
        public virtual int WCO_TraerXProcesoCaja(Nullable<int> idProcesoCaja)
        {
            var idProcesoCajaParameter = idProcesoCaja.HasValue ?
                new ObjectParameter("IdProcesoCaja", idProcesoCaja) :
                new ObjectParameter("IdProcesoCaja", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_TraerXProcesoCaja", idProcesoCajaParameter);
        }
    
        public virtual int WCO_ListarAseguradora(string nombre, Nullable<int> idAseguradora, Nullable<int> estado)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var idAseguradoraParameter = idAseguradora.HasValue ?
                new ObjectParameter("IdAseguradora", idAseguradora) :
                new ObjectParameter("IdAseguradora", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarAseguradora", nombreParameter, idAseguradoraParameter, estadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarClasiComponente_Result> WCO_ListarClasiComponente(Nullable<int> idClasificacion, Nullable<int> idClasificacionPadre, string descripcion, Nullable<int> tipoOperacionID, Nullable<int> modeloServicioId, Nullable<int> estado)
        {
            var idClasificacionParameter = idClasificacion.HasValue ?
                new ObjectParameter("IdClasificacion", idClasificacion) :
                new ObjectParameter("IdClasificacion", typeof(int));
    
            var idClasificacionPadreParameter = idClasificacionPadre.HasValue ?
                new ObjectParameter("IdClasificacionPadre", idClasificacionPadre) :
                new ObjectParameter("IdClasificacionPadre", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var tipoOperacionIDParameter = tipoOperacionID.HasValue ?
                new ObjectParameter("TipoOperacionID", tipoOperacionID) :
                new ObjectParameter("TipoOperacionID", typeof(int));
    
            var modeloServicioIdParameter = modeloServicioId.HasValue ?
                new ObjectParameter("ModeloServicioId", modeloServicioId) :
                new ObjectParameter("ModeloServicioId", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarClasiComponente_Result>("WCO_ListarClasiComponente", idClasificacionParameter, idClasificacionPadreParameter, descripcionParameter, tipoOperacionIDParameter, modeloServicioIdParameter, estadoParameter);
        }
    
        public virtual int WCO_ListarComponente(Nullable<int> idClasificacion, string codigoComponente, string descripcion, Nullable<int> estado, Nullable<int> modeloServicioId, Nullable<int> tipoOperacionID, Nullable<int> tipoPacienteId, string clasificadorMovimiento)
        {
            var idClasificacionParameter = idClasificacion.HasValue ?
                new ObjectParameter("IdClasificacion", idClasificacion) :
                new ObjectParameter("IdClasificacion", typeof(int));
    
            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var modeloServicioIdParameter = modeloServicioId.HasValue ?
                new ObjectParameter("ModeloServicioId", modeloServicioId) :
                new ObjectParameter("ModeloServicioId", typeof(int));
    
            var tipoOperacionIDParameter = tipoOperacionID.HasValue ?
                new ObjectParameter("TipoOperacionID", tipoOperacionID) :
                new ObjectParameter("TipoOperacionID", typeof(int));
    
            var tipoPacienteIdParameter = tipoPacienteId.HasValue ?
                new ObjectParameter("TipoPacienteId", tipoPacienteId) :
                new ObjectParameter("TipoPacienteId", typeof(int));
    
            var clasificadorMovimientoParameter = clasificadorMovimiento != null ?
                new ObjectParameter("ClasificadorMovimiento", clasificadorMovimiento) :
                new ObjectParameter("ClasificadorMovimiento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarComponente", idClasificacionParameter, codigoComponenteParameter, descripcionParameter, estadoParameter, modeloServicioIdParameter, tipoOperacionIDParameter, tipoPacienteIdParameter, clasificadorMovimientoParameter);
        }
    
        public virtual int WCO_ListarComponenteMuestra(string codigoComponente, Nullable<int> idMuestra, string nombre, string abreviatura, Nullable<int> cantidad)
        {
            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));
    
            var idMuestraParameter = idMuestra.HasValue ?
                new ObjectParameter("IdMuestra", idMuestra) :
                new ObjectParameter("IdMuestra", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var abreviaturaParameter = abreviatura != null ?
                new ObjectParameter("Abreviatura", abreviatura) :
                new ObjectParameter("Abreviatura", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarComponenteMuestra", codigoComponenteParameter, idMuestraParameter, nombreParameter, abreviaturaParameter, cantidadParameter);
        }
    
        public virtual int WCO_ListarComponentePerfil(Nullable<int> uneuNegocioId, string codigoComponente, string codigoHomologado, Nullable<int> estado)
        {
            var uneuNegocioIdParameter = uneuNegocioId.HasValue ?
                new ObjectParameter("UneuNegocioId", uneuNegocioId) :
                new ObjectParameter("UneuNegocioId", typeof(int));
    
            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));
    
            var codigoHomologadoParameter = codigoHomologado != null ?
                new ObjectParameter("CodigoHomologado", codigoHomologado) :
                new ObjectParameter("CodigoHomologado", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarComponentePerfil", uneuNegocioIdParameter, codigoComponenteParameter, codigoHomologadoParameter, estadoParameter);
        }
    
        public virtual int WCO_ListarClasificadorMovimiento(string idClasificadorMovimiento, string compania, string nombre, Nullable<int> estado)
        {
            var idClasificadorMovimientoParameter = idClasificadorMovimiento != null ?
                new ObjectParameter("IdClasificadorMovimiento", idClasificadorMovimiento) :
                new ObjectParameter("IdClasificadorMovimiento", typeof(string));
    
            var companiaParameter = compania != null ?
                new ObjectParameter("Compania", compania) :
                new ObjectParameter("Compania", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarClasificadorMovimiento", idClasificadorMovimientoParameter, companiaParameter, nombreParameter, estadoParameter);
        }
    
        public virtual int WCO_ReportedeAtencion(Nullable<int> persona, Nullable<int> idSede, Nullable<int> pEstado, Nullable<System.DateTime> pFechaIni, Nullable<System.DateTime> pFechaFin)
        {
            var personaParameter = persona.HasValue ?
                new ObjectParameter("Persona", persona) :
                new ObjectParameter("Persona", typeof(int));
    
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            var pEstadoParameter = pEstado.HasValue ?
                new ObjectParameter("pEstado", pEstado) :
                new ObjectParameter("pEstado", typeof(int));
    
            var pFechaIniParameter = pFechaIni.HasValue ?
                new ObjectParameter("pFechaIni", pFechaIni) :
                new ObjectParameter("pFechaIni", typeof(System.DateTime));
    
            var pFechaFinParameter = pFechaFin.HasValue ?
                new ObjectParameter("pFechaFin", pFechaFin) :
                new ObjectParameter("pFechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ReportedeAtencion", personaParameter, idSedeParameter, pEstadoParameter, pFechaIniParameter, pFechaFinParameter);
        }
    
        public virtual ObjectResult<WCO_ReporteEstadisticoCantidad_Result> WCO_ReporteEstadisticoCantidad(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ReporteEstadisticoCantidad_Result>("WCO_ReporteEstadisticoCantidad", fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<WCO_ReporteEstadisticoMonto_Result> WCO_ReporteEstadisticoMonto(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ReporteEstadisticoMonto_Result>("WCO_ReporteEstadisticoMonto", fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual int WCO_ReporteIngresoCaja(Nullable<int> persona, Nullable<int> idSede, Nullable<int> pEstado, string clasificadorMovimiento, string codigoComponente, Nullable<System.DateTime> pFechaIni, Nullable<System.DateTime> pFechaFin)
        {
            var personaParameter = persona.HasValue ?
                new ObjectParameter("Persona", persona) :
                new ObjectParameter("Persona", typeof(int));
    
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            var pEstadoParameter = pEstado.HasValue ?
                new ObjectParameter("pEstado", pEstado) :
                new ObjectParameter("pEstado", typeof(int));
    
            var clasificadorMovimientoParameter = clasificadorMovimiento != null ?
                new ObjectParameter("ClasificadorMovimiento", clasificadorMovimiento) :
                new ObjectParameter("ClasificadorMovimiento", typeof(string));
    
            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));
    
            var pFechaIniParameter = pFechaIni.HasValue ?
                new ObjectParameter("pFechaIni", pFechaIni) :
                new ObjectParameter("pFechaIni", typeof(System.DateTime));
    
            var pFechaFinParameter = pFechaFin.HasValue ?
                new ObjectParameter("pFechaFin", pFechaFin) :
                new ObjectParameter("pFechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ReporteIngresoCaja", personaParameter, idSedeParameter, pEstadoParameter, clasificadorMovimientoParameter, codigoComponenteParameter, pFechaIniParameter, pFechaFinParameter);
        }
    
        public virtual ObjectResult<WCO_ReporteLotesxComisionista_Result> WCO_ReporteLotesxComisionista(Nullable<int> idContrato, Nullable<int> idReserva, Nullable<int> idLote, Nullable<int> idManzana, Nullable<int> idProyecto, Nullable<int> idCliente, Nullable<int> idVendedor, string companiaCodigo, string codigo, string descripcion, Nullable<int> idSede, string cliente, string documento, string tipoDocumento, Nullable<int> estado, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var idContratoParameter = idContrato.HasValue ?
                new ObjectParameter("IdContrato", idContrato) :
                new ObjectParameter("IdContrato", typeof(int));
    
            var idReservaParameter = idReserva.HasValue ?
                new ObjectParameter("IdReserva", idReserva) :
                new ObjectParameter("IdReserva", typeof(int));
    
            var idLoteParameter = idLote.HasValue ?
                new ObjectParameter("IdLote", idLote) :
                new ObjectParameter("IdLote", typeof(int));
    
            var idManzanaParameter = idManzana.HasValue ?
                new ObjectParameter("IdManzana", idManzana) :
                new ObjectParameter("IdManzana", typeof(int));
    
            var idProyectoParameter = idProyecto.HasValue ?
                new ObjectParameter("IdProyecto", idProyecto) :
                new ObjectParameter("IdProyecto", typeof(int));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var idVendedorParameter = idVendedor.HasValue ?
                new ObjectParameter("IdVendedor", idVendedor) :
                new ObjectParameter("IdVendedor", typeof(int));
    
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            var clienteParameter = cliente != null ?
                new ObjectParameter("Cliente", cliente) :
                new ObjectParameter("Cliente", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ReporteLotesxComisionista_Result>("WCO_ReporteLotesxComisionista", idContratoParameter, idReservaParameter, idLoteParameter, idManzanaParameter, idProyectoParameter, idClienteParameter, idVendedorParameter, companiaCodigoParameter, codigoParameter, descripcionParameter, idSedeParameter, clienteParameter, documentoParameter, tipoDocumentoParameter, estadoParameter, fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual int WCO_REPORTEPERSONASCONVENIO(string pEMPRESA, string pCREADODESP)
        {
            var pEMPRESAParameter = pEMPRESA != null ?
                new ObjectParameter("PEMPRESA", pEMPRESA) :
                new ObjectParameter("PEMPRESA", typeof(string));
    
            var pCREADODESPParameter = pCREADODESP != null ?
                new ObjectParameter("PCREADODESP", pCREADODESP) :
                new ObjectParameter("PCREADODESP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_REPORTEPERSONASCONVENIO", pEMPRESAParameter, pCREADODESPParameter);
        }
    
        public virtual int wco_ListaClasificadorMovimiento(string codigoTabla)
        {
            var codigoTablaParameter = codigoTabla != null ?
                new ObjectParameter("CodigoTabla", codigoTabla) :
                new ObjectParameter("CodigoTabla", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("wco_ListaClasificadorMovimiento", codigoTablaParameter);
        }
    
        public virtual int WCO_ListarAccionDocumento(string codigoDocumento, Nullable<int> estado)
        {
            var codigoDocumentoParameter = codigoDocumento != null ?
                new ObjectParameter("CodigoDocumento", codigoDocumento) :
                new ObjectParameter("CodigoDocumento", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ListarAccionDocumento", codigoDocumentoParameter, estadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarComboPerfil_Result> WCO_ListarComboPerfil()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarComboPerfil_Result>("WCO_ListarComboPerfil");
        }
    
        public virtual ObjectResult<WCO_PerfilPaginas_Result> WCO_PerfilPaginas(string uSUARIO, string pASSWORD, string sEDE, Nullable<int> iDPERSONA, string tDOCUMENTO)
        {
            var uSUARIOParameter = uSUARIO != null ?
                new ObjectParameter("USUARIO", uSUARIO) :
                new ObjectParameter("USUARIO", typeof(string));
    
            var pASSWORDParameter = pASSWORD != null ?
                new ObjectParameter("PASSWORD", pASSWORD) :
                new ObjectParameter("PASSWORD", typeof(string));
    
            var sEDEParameter = sEDE != null ?
                new ObjectParameter("SEDE", sEDE) :
                new ObjectParameter("SEDE", typeof(string));
    
            var iDPERSONAParameter = iDPERSONA.HasValue ?
                new ObjectParameter("IDPERSONA", iDPERSONA) :
                new ObjectParameter("IDPERSONA", typeof(int));
    
            var tDOCUMENTOParameter = tDOCUMENTO != null ?
                new ObjectParameter("TDOCUMENTO", tDOCUMENTO) :
                new ObjectParameter("TDOCUMENTO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_PerfilPaginas_Result>("WCO_PerfilPaginas", uSUARIOParameter, pASSWORDParameter, sEDEParameter, iDPERSONAParameter, tDOCUMENTOParameter);
        }
    
        public virtual ObjectResult<WCO_PerfilPaginasOpciones_Result> WCO_PerfilPaginasOpciones(string uSUARIO, string pASSWORD, string mODULO, string pAGINA, string sEDE, Nullable<int> iDPERSONA, string tDOCUMENTO)
        {
            var uSUARIOParameter = uSUARIO != null ?
                new ObjectParameter("USUARIO", uSUARIO) :
                new ObjectParameter("USUARIO", typeof(string));
    
            var pASSWORDParameter = pASSWORD != null ?
                new ObjectParameter("PASSWORD", pASSWORD) :
                new ObjectParameter("PASSWORD", typeof(string));
    
            var mODULOParameter = mODULO != null ?
                new ObjectParameter("MODULO", mODULO) :
                new ObjectParameter("MODULO", typeof(string));
    
            var pAGINAParameter = pAGINA != null ?
                new ObjectParameter("PAGINA", pAGINA) :
                new ObjectParameter("PAGINA", typeof(string));
    
            var sEDEParameter = sEDE != null ?
                new ObjectParameter("SEDE", sEDE) :
                new ObjectParameter("SEDE", typeof(string));
    
            var iDPERSONAParameter = iDPERSONA.HasValue ?
                new ObjectParameter("IDPERSONA", iDPERSONA) :
                new ObjectParameter("IDPERSONA", typeof(int));
    
            var tDOCUMENTOParameter = tDOCUMENTO != null ?
                new ObjectParameter("TDOCUMENTO", tDOCUMENTO) :
                new ObjectParameter("TDOCUMENTO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_PerfilPaginasOpciones_Result>("WCO_PerfilPaginasOpciones", uSUARIOParameter, pASSWORDParameter, mODULOParameter, pAGINAParameter, sEDEParameter, iDPERSONAParameter, tDOCUMENTOParameter);
        }
    
        public virtual int WCO_ActualizarComprobanteEstado(string companiaCodigo, Nullable<int> idComprobante, string numeroComprobante, string serie, Nullable<int> estadoEnvioElectronico, string observacion, Nullable<int> estadoSunatElectronico, string descripcion, Nullable<int> estado, string usuarioModificacion)
        {
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var idComprobanteParameter = idComprobante.HasValue ?
                new ObjectParameter("IdComprobante", idComprobante) :
                new ObjectParameter("IdComprobante", typeof(int));
    
            var numeroComprobanteParameter = numeroComprobante != null ?
                new ObjectParameter("NumeroComprobante", numeroComprobante) :
                new ObjectParameter("NumeroComprobante", typeof(string));
    
            var serieParameter = serie != null ?
                new ObjectParameter("Serie", serie) :
                new ObjectParameter("Serie", typeof(string));
    
            var estadoEnvioElectronicoParameter = estadoEnvioElectronico.HasValue ?
                new ObjectParameter("EstadoEnvioElectronico", estadoEnvioElectronico) :
                new ObjectParameter("EstadoEnvioElectronico", typeof(int));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var estadoSunatElectronicoParameter = estadoSunatElectronico.HasValue ?
                new ObjectParameter("EstadoSunatElectronico", estadoSunatElectronico) :
                new ObjectParameter("EstadoSunatElectronico", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WCO_ActualizarComprobanteEstado", companiaCodigoParameter, idComprobanteParameter, numeroComprobanteParameter, serieParameter, estadoEnvioElectronicoParameter, observacionParameter, estadoSunatElectronicoParameter, descripcionParameter, estadoParameter, usuarioModificacionParameter);
        }
    
        public virtual ObjectResult<WCO_ListarComprobante_Result> WCO_ListarComprobante(Nullable<int> uneuNegocioId, Nullable<int> idComprobante, string numeroComprobante, string tipoComprobante, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFinal, Nullable<int> estado, string serie, Nullable<int> idPersona, string sucursal, string documento, string cliente, string formaPago, string companiaCodigo, Nullable<int> conceptoFacturacion, Nullable<int> estadoSunatElectronico)
        {
            var uneuNegocioIdParameter = uneuNegocioId.HasValue ?
                new ObjectParameter("UneuNegocioId", uneuNegocioId) :
                new ObjectParameter("UneuNegocioId", typeof(int));
    
            var idComprobanteParameter = idComprobante.HasValue ?
                new ObjectParameter("IdComprobante", idComprobante) :
                new ObjectParameter("IdComprobante", typeof(int));
    
            var numeroComprobanteParameter = numeroComprobante != null ?
                new ObjectParameter("NumeroComprobante", numeroComprobante) :
                new ObjectParameter("NumeroComprobante", typeof(string));
    
            var tipoComprobanteParameter = tipoComprobante != null ?
                new ObjectParameter("TipoComprobante", tipoComprobante) :
                new ObjectParameter("TipoComprobante", typeof(string));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinalParameter = fechaFinal.HasValue ?
                new ObjectParameter("FechaFinal", fechaFinal) :
                new ObjectParameter("FechaFinal", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var serieParameter = serie != null ?
                new ObjectParameter("Serie", serie) :
                new ObjectParameter("Serie", typeof(string));
    
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("IdPersona", idPersona) :
                new ObjectParameter("IdPersona", typeof(int));
    
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var clienteParameter = cliente != null ?
                new ObjectParameter("Cliente", cliente) :
                new ObjectParameter("Cliente", typeof(string));
    
            var formaPagoParameter = formaPago != null ?
                new ObjectParameter("FormaPago", formaPago) :
                new ObjectParameter("FormaPago", typeof(string));
    
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var conceptoFacturacionParameter = conceptoFacturacion.HasValue ?
                new ObjectParameter("ConceptoFacturacion", conceptoFacturacion) :
                new ObjectParameter("ConceptoFacturacion", typeof(int));
    
            var estadoSunatElectronicoParameter = estadoSunatElectronico.HasValue ?
                new ObjectParameter("EstadoSunatElectronico", estadoSunatElectronico) :
                new ObjectParameter("EstadoSunatElectronico", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarComprobante_Result>("WCO_ListarComprobante", uneuNegocioIdParameter, idComprobanteParameter, numeroComprobanteParameter, tipoComprobanteParameter, fechaInicioParameter, fechaFinalParameter, estadoParameter, serieParameter, idPersonaParameter, sucursalParameter, documentoParameter, clienteParameter, formaPagoParameter, companiaCodigoParameter, conceptoFacturacionParameter, estadoSunatElectronicoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarLetra_Result> WCO_ListarLetra(Nullable<int> idLetra, Nullable<int> idContrato, Nullable<int> idReserva, Nullable<int> idLote, Nullable<int> idManzana, Nullable<int> idProyecto, Nullable<int> idCliente, Nullable<int> idVendedor, string companiaCodigo, string codigo, string nombre, Nullable<int> idSede, string cliente, string documento, string tipoDocumento, Nullable<int> estado, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var idLetraParameter = idLetra.HasValue ?
                new ObjectParameter("IdLetra", idLetra) :
                new ObjectParameter("IdLetra", typeof(int));
    
            var idContratoParameter = idContrato.HasValue ?
                new ObjectParameter("IdContrato", idContrato) :
                new ObjectParameter("IdContrato", typeof(int));
    
            var idReservaParameter = idReserva.HasValue ?
                new ObjectParameter("IdReserva", idReserva) :
                new ObjectParameter("IdReserva", typeof(int));
    
            var idLoteParameter = idLote.HasValue ?
                new ObjectParameter("IdLote", idLote) :
                new ObjectParameter("IdLote", typeof(int));
    
            var idManzanaParameter = idManzana.HasValue ?
                new ObjectParameter("IdManzana", idManzana) :
                new ObjectParameter("IdManzana", typeof(int));
    
            var idProyectoParameter = idProyecto.HasValue ?
                new ObjectParameter("IdProyecto", idProyecto) :
                new ObjectParameter("IdProyecto", typeof(int));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var idVendedorParameter = idVendedor.HasValue ?
                new ObjectParameter("IdVendedor", idVendedor) :
                new ObjectParameter("IdVendedor", typeof(int));
    
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            var clienteParameter = cliente != null ?
                new ObjectParameter("Cliente", cliente) :
                new ObjectParameter("Cliente", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarLetra_Result>("WCO_ListarLetra", idLetraParameter, idContratoParameter, idReservaParameter, idLoteParameter, idManzanaParameter, idProyectoParameter, idClienteParameter, idVendedorParameter, companiaCodigoParameter, codigoParameter, nombreParameter, idSedeParameter, clienteParameter, documentoParameter, tipoDocumentoParameter, estadoParameter, fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<WCO_ListarContratoAtrasados_Result> WCO_ListarContratoAtrasados(Nullable<int> idContrato, Nullable<int> idReserva, Nullable<int> idLote, Nullable<int> idManzana, Nullable<int> idProyecto, Nullable<int> idCliente, Nullable<int> idVendedor, string companiaCodigo, string codigo, string descripcion, Nullable<int> idSede, string cliente, string documento, string tipoDocumento, Nullable<int> estado, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var idContratoParameter = idContrato.HasValue ?
                new ObjectParameter("IdContrato", idContrato) :
                new ObjectParameter("IdContrato", typeof(int));
    
            var idReservaParameter = idReserva.HasValue ?
                new ObjectParameter("IdReserva", idReserva) :
                new ObjectParameter("IdReserva", typeof(int));
    
            var idLoteParameter = idLote.HasValue ?
                new ObjectParameter("IdLote", idLote) :
                new ObjectParameter("IdLote", typeof(int));
    
            var idManzanaParameter = idManzana.HasValue ?
                new ObjectParameter("IdManzana", idManzana) :
                new ObjectParameter("IdManzana", typeof(int));
    
            var idProyectoParameter = idProyecto.HasValue ?
                new ObjectParameter("IdProyecto", idProyecto) :
                new ObjectParameter("IdProyecto", typeof(int));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var idVendedorParameter = idVendedor.HasValue ?
                new ObjectParameter("IdVendedor", idVendedor) :
                new ObjectParameter("IdVendedor", typeof(int));
    
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            var clienteParameter = cliente != null ?
                new ObjectParameter("Cliente", cliente) :
                new ObjectParameter("Cliente", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarContratoAtrasados_Result>("WCO_ListarContratoAtrasados", idContratoParameter, idReservaParameter, idLoteParameter, idManzanaParameter, idProyectoParameter, idClienteParameter, idVendedorParameter, companiaCodigoParameter, codigoParameter, descripcionParameter, idSedeParameter, clienteParameter, documentoParameter, tipoDocumentoParameter, estadoParameter, fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<WCO_ListarLetraAtrasadas_Result> WCO_ListarLetraAtrasadas(Nullable<int> idLetra, Nullable<int> idContrato, Nullable<int> idReserva, Nullable<int> idLote, Nullable<int> idManzana, Nullable<int> idProyecto, Nullable<int> idCliente, Nullable<int> idVendedor, string companiaCodigo, string codigo, string nombre, Nullable<int> idSede, string cliente, string documento, string tipoDocumento, Nullable<int> estado, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var idLetraParameter = idLetra.HasValue ?
                new ObjectParameter("IdLetra", idLetra) :
                new ObjectParameter("IdLetra", typeof(int));
    
            var idContratoParameter = idContrato.HasValue ?
                new ObjectParameter("IdContrato", idContrato) :
                new ObjectParameter("IdContrato", typeof(int));
    
            var idReservaParameter = idReserva.HasValue ?
                new ObjectParameter("IdReserva", idReserva) :
                new ObjectParameter("IdReserva", typeof(int));
    
            var idLoteParameter = idLote.HasValue ?
                new ObjectParameter("IdLote", idLote) :
                new ObjectParameter("IdLote", typeof(int));
    
            var idManzanaParameter = idManzana.HasValue ?
                new ObjectParameter("IdManzana", idManzana) :
                new ObjectParameter("IdManzana", typeof(int));
    
            var idProyectoParameter = idProyecto.HasValue ?
                new ObjectParameter("IdProyecto", idProyecto) :
                new ObjectParameter("IdProyecto", typeof(int));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var idVendedorParameter = idVendedor.HasValue ?
                new ObjectParameter("IdVendedor", idVendedor) :
                new ObjectParameter("IdVendedor", typeof(int));
    
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            var clienteParameter = cliente != null ?
                new ObjectParameter("Cliente", cliente) :
                new ObjectParameter("Cliente", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarLetraAtrasadas_Result>("WCO_ListarLetraAtrasadas", idLetraParameter, idContratoParameter, idReservaParameter, idLoteParameter, idManzanaParameter, idProyectoParameter, idClienteParameter, idVendedorParameter, companiaCodigoParameter, codigoParameter, nombreParameter, idSedeParameter, clienteParameter, documentoParameter, tipoDocumentoParameter, estadoParameter, fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<WCO_ReporteIngresoMensual_Result> WCO_ReporteIngresoMensual(Nullable<int> idLetra, Nullable<int> idContrato, Nullable<int> idReserva, Nullable<int> idLote, Nullable<int> idManzana, Nullable<int> idProyecto, Nullable<int> idCliente, Nullable<int> idVendedor, string companiaCodigo, string codigo, string nombre, Nullable<int> idSede, string cliente, string documento, string tipoDocumento, Nullable<int> estado, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var idLetraParameter = idLetra.HasValue ?
                new ObjectParameter("IdLetra", idLetra) :
                new ObjectParameter("IdLetra", typeof(int));
    
            var idContratoParameter = idContrato.HasValue ?
                new ObjectParameter("IdContrato", idContrato) :
                new ObjectParameter("IdContrato", typeof(int));
    
            var idReservaParameter = idReserva.HasValue ?
                new ObjectParameter("IdReserva", idReserva) :
                new ObjectParameter("IdReserva", typeof(int));
    
            var idLoteParameter = idLote.HasValue ?
                new ObjectParameter("IdLote", idLote) :
                new ObjectParameter("IdLote", typeof(int));
    
            var idManzanaParameter = idManzana.HasValue ?
                new ObjectParameter("IdManzana", idManzana) :
                new ObjectParameter("IdManzana", typeof(int));
    
            var idProyectoParameter = idProyecto.HasValue ?
                new ObjectParameter("IdProyecto", idProyecto) :
                new ObjectParameter("IdProyecto", typeof(int));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var idVendedorParameter = idVendedor.HasValue ?
                new ObjectParameter("IdVendedor", idVendedor) :
                new ObjectParameter("IdVendedor", typeof(int));
    
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            var clienteParameter = cliente != null ?
                new ObjectParameter("Cliente", cliente) :
                new ObjectParameter("Cliente", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ReporteIngresoMensual_Result>("WCO_ReporteIngresoMensual", idLetraParameter, idContratoParameter, idReservaParameter, idLoteParameter, idManzanaParameter, idProyectoParameter, idClienteParameter, idVendedorParameter, companiaCodigoParameter, codigoParameter, nombreParameter, idSedeParameter, clienteParameter, documentoParameter, tipoDocumentoParameter, estadoParameter, fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<WCO_ReportePrograma_Result> WCO_ReportePrograma(Nullable<int> idLetra, Nullable<int> idContrato, Nullable<int> idReserva, Nullable<int> idLote, Nullable<int> idManzana, Nullable<int> idProyecto, Nullable<int> idCliente, Nullable<int> idVendedor, string companiaCodigo, string codigo, string nombre, Nullable<int> idSede, string cliente, string documento, string tipoDocumento, Nullable<int> estado, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var idLetraParameter = idLetra.HasValue ?
                new ObjectParameter("IdLetra", idLetra) :
                new ObjectParameter("IdLetra", typeof(int));
    
            var idContratoParameter = idContrato.HasValue ?
                new ObjectParameter("IdContrato", idContrato) :
                new ObjectParameter("IdContrato", typeof(int));
    
            var idReservaParameter = idReserva.HasValue ?
                new ObjectParameter("IdReserva", idReserva) :
                new ObjectParameter("IdReserva", typeof(int));
    
            var idLoteParameter = idLote.HasValue ?
                new ObjectParameter("IdLote", idLote) :
                new ObjectParameter("IdLote", typeof(int));
    
            var idManzanaParameter = idManzana.HasValue ?
                new ObjectParameter("IdManzana", idManzana) :
                new ObjectParameter("IdManzana", typeof(int));
    
            var idProyectoParameter = idProyecto.HasValue ?
                new ObjectParameter("IdProyecto", idProyecto) :
                new ObjectParameter("IdProyecto", typeof(int));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var idVendedorParameter = idVendedor.HasValue ?
                new ObjectParameter("IdVendedor", idVendedor) :
                new ObjectParameter("IdVendedor", typeof(int));
    
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            var clienteParameter = cliente != null ?
                new ObjectParameter("Cliente", cliente) :
                new ObjectParameter("Cliente", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ReportePrograma_Result>("WCO_ReportePrograma", idLetraParameter, idContratoParameter, idReservaParameter, idLoteParameter, idManzanaParameter, idProyectoParameter, idClienteParameter, idVendedorParameter, companiaCodigoParameter, codigoParameter, nombreParameter, idSedeParameter, clienteParameter, documentoParameter, tipoDocumentoParameter, estadoParameter, fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<WCO_ReporteMensual_Result> WCO_ReporteMensual(Nullable<int> idLetra, Nullable<int> idContrato, Nullable<int> idReserva, Nullable<int> idLote, Nullable<int> idManzana, Nullable<int> idProyecto, Nullable<int> idCliente, Nullable<int> idVendedor, string companiaCodigo, string codigo, string nombre, Nullable<int> idSede, string cliente, string documento, string tipoDocumento, Nullable<int> estado, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var idLetraParameter = idLetra.HasValue ?
                new ObjectParameter("IdLetra", idLetra) :
                new ObjectParameter("IdLetra", typeof(int));
    
            var idContratoParameter = idContrato.HasValue ?
                new ObjectParameter("IdContrato", idContrato) :
                new ObjectParameter("IdContrato", typeof(int));
    
            var idReservaParameter = idReserva.HasValue ?
                new ObjectParameter("IdReserva", idReserva) :
                new ObjectParameter("IdReserva", typeof(int));
    
            var idLoteParameter = idLote.HasValue ?
                new ObjectParameter("IdLote", idLote) :
                new ObjectParameter("IdLote", typeof(int));
    
            var idManzanaParameter = idManzana.HasValue ?
                new ObjectParameter("IdManzana", idManzana) :
                new ObjectParameter("IdManzana", typeof(int));
    
            var idProyectoParameter = idProyecto.HasValue ?
                new ObjectParameter("IdProyecto", idProyecto) :
                new ObjectParameter("IdProyecto", typeof(int));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var idVendedorParameter = idVendedor.HasValue ?
                new ObjectParameter("IdVendedor", idVendedor) :
                new ObjectParameter("IdVendedor", typeof(int));
    
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            var clienteParameter = cliente != null ?
                new ObjectParameter("Cliente", cliente) :
                new ObjectParameter("Cliente", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ReporteMensual_Result>("WCO_ReporteMensual", idLetraParameter, idContratoParameter, idReservaParameter, idLoteParameter, idManzanaParameter, idProyectoParameter, idClienteParameter, idVendedorParameter, companiaCodigoParameter, codigoParameter, nombreParameter, idSedeParameter, clienteParameter, documentoParameter, tipoDocumentoParameter, estadoParameter, fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<WCO_ListarLetraNotificacion_Result> WCO_ListarLetraNotificacion(Nullable<int> idContrato, string companiaCodigo, string codigo, string nombre, Nullable<int> idSede, string cliente, string documento, string tipoDocumento, Nullable<int> estado, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var idContratoParameter = idContrato.HasValue ?
                new ObjectParameter("IdContrato", idContrato) :
                new ObjectParameter("IdContrato", typeof(int));
    
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            var clienteParameter = cliente != null ?
                new ObjectParameter("Cliente", cliente) :
                new ObjectParameter("Cliente", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarLetraNotificacion_Result>("WCO_ListarLetraNotificacion", idContratoParameter, companiaCodigoParameter, codigoParameter, nombreParameter, idSedeParameter, clienteParameter, documentoParameter, tipoDocumentoParameter, estadoParameter, fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<WCO_ListarLetraRequerimiento_Result> WCO_ListarLetraRequerimiento(Nullable<int> idContrato, string companiaCodigo, string codigo, string nombre, Nullable<int> idSede, string cliente, string documento, string tipoDocumento, Nullable<int> estado, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var idContratoParameter = idContrato.HasValue ?
                new ObjectParameter("IdContrato", idContrato) :
                new ObjectParameter("IdContrato", typeof(int));
    
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            var clienteParameter = cliente != null ?
                new ObjectParameter("Cliente", cliente) :
                new ObjectParameter("Cliente", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarLetraRequerimiento_Result>("WCO_ListarLetraRequerimiento", idContratoParameter, companiaCodigoParameter, codigoParameter, nombreParameter, idSedeParameter, clienteParameter, documentoParameter, tipoDocumentoParameter, estadoParameter, fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<WCO_AccesoUsuario_Result> WCO_AccesoUsuario(string uSUARIO, string pASSWORD, Nullable<int> sEDE, Nullable<int> iDPERSONA, string tDOCUMENTO, string eXPERIRARPASSWORDFLAG)
        {
            var uSUARIOParameter = uSUARIO != null ?
                new ObjectParameter("USUARIO", uSUARIO) :
                new ObjectParameter("USUARIO", typeof(string));
    
            var pASSWORDParameter = pASSWORD != null ?
                new ObjectParameter("PASSWORD", pASSWORD) :
                new ObjectParameter("PASSWORD", typeof(string));
    
            var sEDEParameter = sEDE.HasValue ?
                new ObjectParameter("SEDE", sEDE) :
                new ObjectParameter("SEDE", typeof(int));
    
            var iDPERSONAParameter = iDPERSONA.HasValue ?
                new ObjectParameter("IDPERSONA", iDPERSONA) :
                new ObjectParameter("IDPERSONA", typeof(int));
    
            var tDOCUMENTOParameter = tDOCUMENTO != null ?
                new ObjectParameter("TDOCUMENTO", tDOCUMENTO) :
                new ObjectParameter("TDOCUMENTO", typeof(string));
    
            var eXPERIRARPASSWORDFLAGParameter = eXPERIRARPASSWORDFLAG != null ?
                new ObjectParameter("EXPERIRARPASSWORDFLAG", eXPERIRARPASSWORDFLAG) :
                new ObjectParameter("EXPERIRARPASSWORDFLAG", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_AccesoUsuario_Result>("WCO_AccesoUsuario", uSUARIOParameter, pASSWORDParameter, sEDEParameter, iDPERSONAParameter, tDOCUMENTOParameter, eXPERIRARPASSWORDFLAGParameter);
        }
    
        public virtual ObjectResult<WCO_ListarUsuario_Result> WCO_ListarUsuario(string perfil, string usuario, string nombrecompleto, string estado)
        {
            var perfilParameter = perfil != null ?
                new ObjectParameter("perfil", perfil) :
                new ObjectParameter("perfil", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var nombrecompletoParameter = nombrecompleto != null ?
                new ObjectParameter("nombrecompleto", nombrecompleto) :
                new ObjectParameter("nombrecompleto", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarUsuario_Result>("WCO_ListarUsuario", perfilParameter, usuarioParameter, nombrecompletoParameter, estadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarInteres_Result> WCO_ListarInteres(Nullable<int> idInteres, Nullable<int> idLetra, Nullable<int> idContrato, Nullable<int> idLote, Nullable<int> idManzana, Nullable<int> idProyecto, Nullable<int> idCliente, Nullable<int> idVendedor, string companiaCodigo, string codigo, string nombre, Nullable<int> idSede, string cliente, string documento, string tipoDocumento, Nullable<int> estado, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var idInteresParameter = idInteres.HasValue ?
                new ObjectParameter("IdInteres", idInteres) :
                new ObjectParameter("IdInteres", typeof(int));
    
            var idLetraParameter = idLetra.HasValue ?
                new ObjectParameter("IdLetra", idLetra) :
                new ObjectParameter("IdLetra", typeof(int));
    
            var idContratoParameter = idContrato.HasValue ?
                new ObjectParameter("IdContrato", idContrato) :
                new ObjectParameter("IdContrato", typeof(int));
    
            var idLoteParameter = idLote.HasValue ?
                new ObjectParameter("IdLote", idLote) :
                new ObjectParameter("IdLote", typeof(int));
    
            var idManzanaParameter = idManzana.HasValue ?
                new ObjectParameter("IdManzana", idManzana) :
                new ObjectParameter("IdManzana", typeof(int));
    
            var idProyectoParameter = idProyecto.HasValue ?
                new ObjectParameter("IdProyecto", idProyecto) :
                new ObjectParameter("IdProyecto", typeof(int));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var idVendedorParameter = idVendedor.HasValue ?
                new ObjectParameter("IdVendedor", idVendedor) :
                new ObjectParameter("IdVendedor", typeof(int));
    
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            var clienteParameter = cliente != null ?
                new ObjectParameter("Cliente", cliente) :
                new ObjectParameter("Cliente", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarInteres_Result>("WCO_ListarInteres", idInteresParameter, idLetraParameter, idContratoParameter, idLoteParameter, idManzanaParameter, idProyectoParameter, idClienteParameter, idVendedorParameter, companiaCodigoParameter, codigoParameter, nombreParameter, idSedeParameter, clienteParameter, documentoParameter, tipoDocumentoParameter, estadoParameter, fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<WCO_ListarLetraReporte_Result> WCO_ListarLetraReporte(Nullable<int> idContrato)
        {
            var idContratoParameter = idContrato.HasValue ?
                new ObjectParameter("IdContrato", idContrato) :
                new ObjectParameter("IdContrato", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarLetraReporte_Result>("WCO_ListarLetraReporte", idContratoParameter);
        }
    }
}
